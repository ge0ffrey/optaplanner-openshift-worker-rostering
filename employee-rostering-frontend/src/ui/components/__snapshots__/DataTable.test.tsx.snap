// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataTable component should only render data on page 1`] = `
<MockDataTable
  columnTitles={
    Array [
      "Column 1",
      "Column 2",
    ]
  }
  tableData={
    Array [
      Object {
        "name": "Some Data",
        "number": 1,
      },
      Object {
        "name": "More Data",
        "number": 2,
      },
    ]
  }
  title="Data Table"
>
  <Card>
    <article
      className="pf-c-card"
    >
      <div
        style={
          Object {
            "display": "grid",
            "gridTemplateColumns": "max-content auto min-content max-content",
          }
        }
      >
        <FilterComponent
          filter={[Function]}
          onChange={[Function]}
        >
          <div
            className="search-icons"
          >
            <TextInput
              aria-label="Search"
              className=""
              isDisabled={false}
              isReadOnly={false}
              isRequired={false}
              isValid={true}
              onChange={[Function]}
              placeholder="Search..."
              type="text"
              value=""
            >
              <input
                aria-invalid={false}
                aria-label="Search"
                className="pf-c-form-control"
                disabled={false}
                onChange={[Function]}
                placeholder="Search..."
                readOnly={false}
                required={false}
                type="text"
                value=""
              />
            </TextInput>
            <Button
              isDisabled={true}
              onClick={[Function]}
              variant="plain"
            >
              <button
                aria-disabled={null}
                aria-label={null}
                className="pf-c-button pf-m-plain pf-m-disabled"
                disabled={true}
                onClick={[Function]}
                tabIndex={null}
                type="button"
              >
                <svg
                  aria-hidden="true"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                    transform=""
                  />
                </svg>
              </button>
            </Button>
          </div>
        </FilterComponent>
        <span />
        <Button
          isDisabled={false}
          onClick={[Function]}
        >
          <button
            aria-disabled={null}
            aria-label={null}
            className="pf-c-button pf-m-primary"
            disabled={false}
            onClick={[Function]}
            tabIndex={null}
            type="button"
          >
            Add
          </button>
        </Button>
        <Pagination
          className=""
          dropDirection="down"
          itemCount={2}
          itemsEnd={null}
          itemsStart={null}
          onFirstClick={[Function]}
          onLastClick={[Function]}
          onNextClick={[Function]}
          onPageInput={[Function]}
          onPerPageSelect={[Function]}
          onPreviousClick={[Function]}
          onSetPage={[Function]}
          page={1}
          perPage={10}
          perPageOptions={
            Array [
              Object {
                "title": "10",
                "value": 10,
              },
              Object {
                "title": "20",
                "value": 20,
              },
              Object {
                "title": "50",
                "value": 50,
              },
              Object {
                "title": "100",
                "value": 100,
              },
            ]
          }
          titles={
            Object {
              "currPage": "Current page",
              "items": "items",
              "itemsPerPage": "Items per page",
              "optionsToggle": "Select",
              "pages": "pages",
              "paginationTitle": "Pagination",
              "perPageSuffix": "per page",
              "toFirstPage": "Go to first page",
              "toLastPage": "Go to last page",
              "toNextPage": "Go to next page",
              "toPreviousPage": "Go to previous page",
            }
          }
          toggleTemplate={[Function]}
          variant="top"
          widgetId="pagination-options-menu-top"
        >
          <div
            className="pf-c-pagination"
          >
            <div
              className="pf-c-pagination__total-items"
            >
              2 items
            </div>
            <PaginationOptionsMenu
              className=""
              dropDirection="down"
              firstIndex={1}
              itemCount={2}
              itemsPerPageTitle="Items per page"
              itemsTitle="items"
              lastIndex={2}
              onPerPageSelect={[Function]}
              optionsToggle="Select"
              perPage={10}
              perPageOptions={
                Array [
                  Object {
                    "title": "10",
                    "value": 10,
                  },
                  Object {
                    "title": "20",
                    "value": 20,
                  },
                  Object {
                    "title": "50",
                    "value": 50,
                  },
                  Object {
                    "title": "100",
                    "value": 100,
                  },
                ]
              }
              perPageSuffix="per page"
              toggleTemplate={[Function]}
              widgetId="pagination-options-menu-top"
            >
              <div
                className="pf-c-options-menu"
              >
                <span
                  hidden={true}
                  id="pagination-options-menu-top-label"
                >
                  Items per page
                  :
                </span>
                <Dropdown
                  className=""
                  direction="down"
                  dropdownItems={
                    Array [
                      <Item
                        className="pf-c-options-menu__menu-item pf-m-selected"
                        component="button"
                        data-action="per-page-10"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        10
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                        <i
                          className="pf-c-options-menu__menu-item-icon"
                        >
                          <CheckIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </i>
                      </Item>,
                      <Item
                        className="pf-c-options-menu__menu-item"
                        component="button"
                        data-action="per-page-20"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        20
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                      </Item>,
                      <Item
                        className="pf-c-options-menu__menu-item"
                        component="button"
                        data-action="per-page-50"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        50
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                      </Item>,
                      <Item
                        className="pf-c-options-menu__menu-item"
                        component="button"
                        data-action="per-page-100"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        100
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                      </Item>,
                    ]
                  }
                  isGrouped={false}
                  isOpen={false}
                  isPlain={true}
                  onSelect={[Function]}
                  position="left"
                  toggle={
                    <OptionsToggle
                      firstIndex={1}
                      isOpen={false}
                      itemCount={2}
                      itemsTitle="items"
                      lastIndex={2}
                      onToggle={[Function]}
                      optionsToggle="Select"
                      toggleTemplate={[Function]}
                      widgetId="pagination-options-menu-top"
                    />
                  }
                >
                  <div
                    className="pf-c-dropdown"
                  >
                    <OptionsToggle
                      ariaHasPopup={true}
                      firstIndex={1}
                      id="pf-toggle-id-6"
                      isOpen={false}
                      isPlain={true}
                      itemCount={2}
                      itemsTitle="items"
                      key=".0"
                      lastIndex={2}
                      onEnter={[Function]}
                      onToggle={[Function]}
                      optionsToggle="Select"
                      toggleTemplate={[Function]}
                      widgetId="pagination-options-menu-top"
                    >
                      <div
                        className="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                      >
                        <span
                          className="pf-c-options-menu__toggle-text"
                        >
                          <ToggleTemplate
                            firstIndex={1}
                            itemCount={2}
                            itemsTitle="items"
                            lastIndex={2}
                          >
                            <strong>
                              1
                               - 
                              2
                            </strong>
                             
                            of 
                            <strong>
                              2
                            </strong>
                             
                            items
                          </ToggleTemplate>
                        </span>
                        <button
                          aria-expanded={false}
                          aria-haspopup="listbox"
                          aria-label="Select"
                          aria-labelledby="pagination-options-menu-top-toggle pagination-options-menu-top-label"
                          className="pf-c-options-menu__toggle-button"
                          id="pagination-options-menu-top-toggle"
                          onClick={[Function]}
                          type="button"
                        >
                          <CaretDownIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 320 512"
                              width="1em"
                            >
                              <path
                                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                transform=""
                              />
                            </svg>
                          </CaretDownIcon>
                        </button>
                      </div>
                    </OptionsToggle>
                  </div>
                </Dropdown>
              </div>
            </PaginationOptionsMenu>
            <Navigation
              className=""
              currPage="Current page"
              lastPage={1}
              onFirstClick={[Function]}
              onLastClick={[Function]}
              onNextClick={[Function]}
              onPageInput={[Function]}
              onPreviousClick={[Function]}
              onSetPage={[Function]}
              page={1}
              pagesTitle="pages"
              paginationTitle="Pagination"
              toFirstPage="Go to first page"
              toLastPage="Go to last page"
              toNextPage="Go to next page"
              toPreviousPage="Go to previous page"
            >
              <nav
                aria-label="Pagination"
                className="pf-c-pagination__nav"
              >
                <Button
                  aria-label="Go to first page"
                  data-action="first"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to first page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="first"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleDoubleLeftIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 448 512"
                        width="1em"
                      >
                        <path
                          d="M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z"
                          transform=""
                        />
                      </svg>
                    </AngleDoubleLeftIcon>
                  </button>
                </Button>
                <Button
                  aria-label="Go to previous page"
                  data-action="previous"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to previous page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="previous"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleLeftIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 256 512"
                        width="1em"
                      >
                        <path
                          d="M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"
                          transform=""
                        />
                      </svg>
                    </AngleLeftIcon>
                  </button>
                </Button>
                <div
                  className="pf-c-pagination__nav-page-select"
                >
                  <input
                    aria-label="Current page"
                    className="pf-c-form-control"
                    max={1}
                    min="1"
                    onChange={[Function]}
                    type="number"
                    value={1}
                  />
                  <span
                    aria-hidden="true"
                  >
                    of 
                    1
                     
                    pages
                  </span>
                </div>
                <Button
                  aria-label="Go to next page"
                  data-action="next"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to next page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="next"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleRightIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 256 512"
                        width="1em"
                      >
                        <path
                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                          transform=""
                        />
                      </svg>
                    </AngleRightIcon>
                  </button>
                </Button>
                <Button
                  aria-label="Go to last page"
                  data-action="last"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to last page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="last"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleDoubleRightIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 448 512"
                        width="1em"
                      >
                        <path
                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z"
                          transform=""
                        />
                      </svg>
                    </AngleDoubleRightIcon>
                  </button>
                </Button>
              </nav>
            </Navigation>
          </div>
        </Pagination>
      </div>
      <Table
        borders={true}
        caption="Data Table"
        cells={
          Array [
            Object {
              "cellTransforms": Array [
                [Function],
              ],
              "props": Object {},
              "title": "Column 1",
              "transforms": undefined,
            },
            Object {
              "cellTransforms": Array [
                [Function],
              ],
              "props": Object {},
              "title": "Column 2",
              "transforms": Array [
                [Function],
              ],
            },
            Object {
              "cellTransforms": Array [
                [Function],
              ],
              "props": Object {},
              "title": "",
              "transforms": undefined,
            },
          ]
        }
        className=""
        contentId="expanded-content"
        dropdownDirection="down"
        dropdownPosition="right"
        expandId="expandable-toggle"
        gridBreakPoint="grid-md"
        onCollapse={null}
        onExpand={null}
        onSort={[Function]}
        role="grid"
        rowLabeledBy="simple-node"
        rows={
          Array [
            Object {
              "cells": Array [
                Object {
                  "title": <EditableComponent
                    editor={
                      <input
                        id="editor"
                      />
                    }
                    isEditing={false}
                    viewer={
                      <span
                        id="viewer"
                      >
                        Some Data
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={<input />}
                    isEditing={false}
                    viewer={
                      <span>
                        1
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={
                      <span>
                        <Button
                          aria-label="Save"
                          onClick={[Function]}
                          variant="link"
                        >
                          <SaveIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Cancel"
                          onClick={[Function]}
                          variant="link"
                        >
                          <CloseIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                    isEditing={false}
                    viewer={
                      <span>
                        <Button
                          aria-label="Edit"
                          onClick={[Function]}
                          variant="link"
                        >
                          <EditIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Delete"
                          onClick={[Function]}
                          variant="link"
                        >
                          <TrashIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                  />,
                },
              ],
            },
            Object {
              "cells": Array [
                Object {
                  "title": <EditableComponent
                    editor={
                      <input
                        id="editor"
                      />
                    }
                    isEditing={false}
                    viewer={
                      <span
                        id="viewer"
                      >
                        More Data
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={<input />}
                    isEditing={false}
                    viewer={
                      <span>
                        2
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={
                      <span>
                        <Button
                          aria-label="Save"
                          onClick={[Function]}
                          variant="link"
                        >
                          <SaveIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Cancel"
                          onClick={[Function]}
                          variant="link"
                        >
                          <CloseIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                    isEditing={false}
                    viewer={
                      <span>
                        <Button
                          aria-label="Edit"
                          onClick={[Function]}
                          variant="link"
                        >
                          <EditIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Delete"
                          onClick={[Function]}
                          variant="link"
                        >
                          <TrashIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                  />,
                },
              ],
            },
          ]
        }
        sortBy={Object {}}
        variant={null}
      >
        <Provider
          className="pf-c-table pf-m-grid-md"
          columns={
            Array [
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "data": undefined,
                "extraParams": Object {
                  "actionResolver": undefined,
                  "actions": undefined,
                  "allRowsSelected": false,
                  "areActionsDisabled": undefined,
                  "contentId": "expanded-content",
                  "dropdownDirection": "down",
                  "dropdownPosition": "right",
                  "expandId": "expandable-toggle",
                  "firstUserColumnIndex": 0,
                  "onCollapse": null,
                  "onExpand": null,
                  "onSelect": undefined,
                  "onSort": [Function],
                  "rowLabeledBy": "simple-node",
                  "sortBy": Object {},
                },
                "header": Object {
                  "formatters": Array [],
                  "label": "Column 1",
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "property": "column-1",
                "props": Object {
                  "data-key": 0,
                  "data-label": "Column 1",
                },
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "data": undefined,
                "extraParams": Object {
                  "actionResolver": undefined,
                  "actions": undefined,
                  "allRowsSelected": false,
                  "areActionsDisabled": undefined,
                  "contentId": "expanded-content",
                  "dropdownDirection": "down",
                  "dropdownPosition": "right",
                  "expandId": "expandable-toggle",
                  "firstUserColumnIndex": 0,
                  "onCollapse": null,
                  "onExpand": null,
                  "onSelect": undefined,
                  "onSort": [Function],
                  "rowLabeledBy": "simple-node",
                  "sortBy": Object {},
                },
                "header": Object {
                  "formatters": Array [],
                  "label": "Column 2",
                  "transforms": Array [
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "property": "column-2",
                "props": Object {
                  "data-key": 1,
                  "data-label": "Column 2",
                },
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "data": undefined,
                "extraParams": Object {
                  "actionResolver": undefined,
                  "actions": undefined,
                  "allRowsSelected": false,
                  "areActionsDisabled": undefined,
                  "contentId": "expanded-content",
                  "dropdownDirection": "down",
                  "dropdownPosition": "right",
                  "expandId": "expandable-toggle",
                  "firstUserColumnIndex": 0,
                  "onCollapse": null,
                  "onExpand": null,
                  "onSelect": undefined,
                  "onSort": [Function],
                  "rowLabeledBy": "simple-node",
                  "sortBy": Object {},
                },
                "header": Object {
                  "formatters": Array [],
                  "label": "",
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "property": "column-2",
                "props": Object {
                  "data-key": 2,
                  "data-label": "",
                },
              },
            ]
          }
          renderers={
            Object {
              "body": Object {
                "cell": [Function],
                "row": [Function],
                "wrapper": [Function],
              },
              "header": Object {
                "cell": [Function],
              },
            }
          }
          role="grid"
        >
          <table
            className="pf-c-table pf-m-grid-md"
            role="grid"
          >
            <caption>
              Data Table
            </caption>
            <TableHeader
              className=""
            >
              <ContextHeader
                className=""
              >
                <Header
                  className=""
                >
                  <thead
                    className=""
                  >
                    <HeaderRow
                      key="0-header-row"
                      onRow={[Function]}
                      renderers={
                        Object {
                          "cell": [Function],
                          "row": "tr",
                          "wrapper": "thead",
                        }
                      }
                      rowData={
                        Array [
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": undefined,
                              "actions": undefined,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "onCollapse": null,
                              "onExpand": null,
                              "onSelect": undefined,
                              "onSort": [Function],
                              "rowLabeledBy": "simple-node",
                              "sortBy": Object {},
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "Column 1",
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-1",
                            "props": Object {
                              "data-key": 0,
                              "data-label": "Column 1",
                            },
                          },
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": undefined,
                              "actions": undefined,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "onCollapse": null,
                              "onExpand": null,
                              "onSelect": undefined,
                              "onSort": [Function],
                              "rowLabeledBy": "simple-node",
                              "sortBy": Object {},
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "Column 2",
                              "transforms": Array [
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-2",
                            "props": Object {
                              "data-key": 1,
                              "data-label": "Column 2",
                            },
                          },
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": undefined,
                              "actions": undefined,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "onCollapse": null,
                              "onExpand": null,
                              "onSelect": undefined,
                              "onSort": [Function],
                              "rowLabeledBy": "simple-node",
                              "sortBy": Object {},
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "",
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-2",
                            "props": Object {
                              "data-key": 2,
                              "data-label": "",
                            },
                          },
                        ]
                      }
                      rowIndex={0}
                    >
                      <tr>
                        <HeaderCell
                          component="th"
                          data-key={0}
                          data-label="Column 1"
                          key="0-header"
                          scope="col"
                          textCenter={false}
                        >
                          <th
                            className=""
                            data-key={0}
                            scope="col"
                          >
                            Column 1
                          </th>
                        </HeaderCell>
                        <HeaderCell
                          aria-sort="none"
                          className="pf-c-table__sort"
                          component="th"
                          data-key={1}
                          data-label="Column 2"
                          key="1-header"
                          scope="col"
                          textCenter={false}
                        >
                          <th
                            aria-sort="none"
                            className="pf-c-table__sort"
                            data-key={1}
                            scope="col"
                          >
                            <SortColumn
                              className="pf-c-button pf-m-plain"
                              isSortedBy={false}
                              onSort={[Function]}
                              sortDirection=""
                            >
                              <button
                                className="pf-c-button pf-m-plain"
                                onClick={[Function]}
                              >
                                Column 2
                                <span
                                  className="pf-c-table__sort-indicator"
                                >
                                  <ArrowsAltVIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 256 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                        transform=""
                                      />
                                    </svg>
                                  </ArrowsAltVIcon>
                                </span>
                              </button>
                            </SortColumn>
                          </th>
                        </HeaderCell>
                        <HeaderCell
                          component="th"
                          data-key={2}
                          data-label=""
                          key="2-header"
                          scope=""
                          textCenter={false}
                        >
                          <th
                            className=""
                            data-key={2}
                          />
                        </HeaderCell>
                      </tr>
                    </HeaderRow>
                  </thead>
                </Header>
              </ContextHeader>
            </TableHeader>
            <TableBody
              className=""
              onRowClick={[Function]}
              rowKey="id"
            >
              <ContextBody
                className=""
                headerData={
                  Array [
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": null,
                        "onExpand": null,
                        "onSelect": undefined,
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Column 1",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-1",
                      "props": Object {
                        "data-key": 0,
                        "data-label": "Column 1",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": null,
                        "onExpand": null,
                        "onSelect": undefined,
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Column 2",
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-2",
                      "props": Object {
                        "data-key": 1,
                        "data-label": "Column 2",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": null,
                        "onExpand": null,
                        "onSelect": undefined,
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-2",
                      "props": Object {
                        "data-key": 2,
                        "data-label": "",
                      },
                    },
                  ]
                }
                onRow={[Function]}
                onRowClick={[Function]}
                rowKey="id"
                rows={
                  Array [
                    Object {
                      "cells": Array [
                        Object {
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                Some Data
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={<input />}
                            isEditing={false}
                            viewer={
                              <span>
                                1
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                      ],
                    },
                    Object {
                      "cells": Array [
                        Object {
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                More Data
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={<input />}
                            isEditing={false}
                            viewer={
                              <span>
                                2
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                      ],
                    },
                  ]
                }
              >
                <Body
                  className=""
                  mappedRows={
                    Array [
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  Some Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  1
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                Some Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 0,
                        "isExpanded": undefined,
                        "isFirst": true,
                        "isFirstVisible": true,
                        "isLast": false,
                        "isLastVisible": false,
                      },
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  More Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  2
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                More Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 1,
                        "isExpanded": undefined,
                        "isFirst": false,
                        "isFirstVisible": false,
                        "isLast": true,
                        "isLastVisible": true,
                      },
                    ]
                  }
                  onRow={[Function]}
                  rowKey="id"
                  rows={
                    Array [
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  Some Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  1
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                Some Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 0,
                        "isExpanded": undefined,
                        "isFirst": true,
                        "isFirstVisible": true,
                        "isLast": false,
                        "isLastVisible": false,
                      },
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  More Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  2
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                More Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 1,
                        "isExpanded": undefined,
                        "isFirst": false,
                        "isFirstVisible": false,
                        "isLast": true,
                        "isLastVisible": true,
                      },
                    ]
                  }
                >
                  <BodyWrapper
                    className=""
                    mappedRows={
                      Array [
                        Object {
                          "cells": Array [
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    Some Data
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={<input />}
                                isEditing={false}
                                viewer={
                                  <span>
                                    1
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                          ],
                          "column-1": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  Some Data
                                </span>
                              }
                            />,
                          },
                          "column-2": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                          "id": 0,
                          "isExpanded": undefined,
                          "isFirst": true,
                          "isFirstVisible": true,
                          "isLast": false,
                          "isLastVisible": false,
                        },
                        Object {
                          "cells": Array [
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    More Data
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={<input />}
                                isEditing={false}
                                viewer={
                                  <span>
                                    2
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                          ],
                          "column-1": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  More Data
                                </span>
                              }
                            />,
                          },
                          "column-2": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                          "id": 1,
                          "isExpanded": undefined,
                          "isFirst": false,
                          "isFirstVisible": false,
                          "isLast": true,
                          "isLastVisible": true,
                        },
                      ]
                    }
                    onCollapse={null}
                    rows={Array []}
                    tbodyRef={null}
                  >
                    <tbody
                      className=""
                    >
                      <BodyRow
                        columns={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 1",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-1",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Column 1",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 2",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Column 2",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "",
                              },
                            },
                          ]
                        }
                        key="0-row"
                        onRow={[Function]}
                        renderers={
                          Object {
                            "cell": [Function],
                            "row": [Function],
                            "wrapper": [Function],
                          }
                        }
                        rowData={
                          Object {
                            "cells": Array [
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      Some Data
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={<input />}
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      1
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                            ],
                            "column-1": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    Some Data
                                  </span>
                                }
                              />,
                            },
                            "column-2": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                            "id": 0,
                            "isExpanded": undefined,
                            "isFirst": true,
                            "isFirstVisible": true,
                            "isLast": false,
                            "isLastVisible": false,
                          }
                        }
                        rowIndex={0}
                        rowKey="0-row"
                      >
                        <RowWrapper
                          className=""
                          onMouseDown={[Function]}
                          row={
                            Object {
                              "cells": Array [
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <input
                                        id="editor"
                                      />
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span
                                        id="viewer"
                                      >
                                        Some Data
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={<input />}
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        1
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <span>
                                        <Button
                                          aria-label="Save"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <SaveIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Cancel"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <CloseIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        <Button
                                          aria-label="Edit"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <EditIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Delete"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <TrashIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                  />,
                                },
                              ],
                              "column-1": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      Some Data
                                    </span>
                                  }
                                />,
                              },
                              "column-2": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                              "id": 0,
                              "isExpanded": undefined,
                              "isFirst": true,
                              "isFirstVisible": true,
                              "isLast": false,
                              "isLastVisible": false,
                            }
                          }
                          rowProps={
                            Object {
                              "rowIndex": 0,
                              "rowKey": "0-row",
                            }
                          }
                        >
                          <tr
                            className=""
                            hidden={false}
                            onMouseDown={[Function]}
                          >
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={0}
                              data-label="Column 1"
                              isVisible={true}
                              key="0-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={0}
                                data-label="Column 1"
                              >
                                <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      Some Data
                                    </span>
                                  }
                                >
                                  <span
                                    id="viewer"
                                    key="0"
                                  >
                                    Some Data
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={1}
                              data-label="Column 2"
                              isVisible={true}
                              key="1-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={1}
                                data-label="Column 2"
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={2}
                              data-label=""
                              isVisible={true}
                              key="2-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={2}
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                          </tr>
                        </RowWrapper>
                      </BodyRow>
                      <BodyRow
                        columns={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 1",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-1",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Column 1",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 2",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Column 2",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "",
                              },
                            },
                          ]
                        }
                        key="1-row"
                        onRow={[Function]}
                        renderers={
                          Object {
                            "cell": [Function],
                            "row": [Function],
                            "wrapper": [Function],
                          }
                        }
                        rowData={
                          Object {
                            "cells": Array [
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      More Data
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={<input />}
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      2
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                            ],
                            "column-1": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    More Data
                                  </span>
                                }
                              />,
                            },
                            "column-2": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                            "id": 1,
                            "isExpanded": undefined,
                            "isFirst": false,
                            "isFirstVisible": false,
                            "isLast": true,
                            "isLastVisible": true,
                          }
                        }
                        rowIndex={1}
                        rowKey="1-row"
                      >
                        <RowWrapper
                          className=""
                          onMouseDown={[Function]}
                          row={
                            Object {
                              "cells": Array [
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <input
                                        id="editor"
                                      />
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span
                                        id="viewer"
                                      >
                                        More Data
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={<input />}
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        2
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <span>
                                        <Button
                                          aria-label="Save"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <SaveIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Cancel"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <CloseIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        <Button
                                          aria-label="Edit"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <EditIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Delete"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <TrashIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                  />,
                                },
                              ],
                              "column-1": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      More Data
                                    </span>
                                  }
                                />,
                              },
                              "column-2": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                              "id": 1,
                              "isExpanded": undefined,
                              "isFirst": false,
                              "isFirstVisible": false,
                              "isLast": true,
                              "isLastVisible": true,
                            }
                          }
                          rowProps={
                            Object {
                              "rowIndex": 1,
                              "rowKey": "1-row",
                            }
                          }
                        >
                          <tr
                            className=""
                            hidden={false}
                            onMouseDown={[Function]}
                          >
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={0}
                              data-label="Column 1"
                              isVisible={true}
                              key="0-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={0}
                                data-label="Column 1"
                              >
                                <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      More Data
                                    </span>
                                  }
                                >
                                  <span
                                    id="viewer"
                                    key="0"
                                  >
                                    More Data
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={1}
                              data-label="Column 2"
                              isVisible={true}
                              key="1-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={1}
                                data-label="Column 2"
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={2}
                              data-label=""
                              isVisible={true}
                              key="2-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={2}
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                          </tr>
                        </RowWrapper>
                      </BodyRow>
                    </tbody>
                  </BodyWrapper>
                </Body>
              </ContextBody>
            </TableBody>
          </table>
        </Provider>
      </Table>
    </article>
  </Card>
</MockDataTable>
`;

exports[`DataTable component should only render rows that match filter 1`] = `
<MockDataTable
  columnTitles={
    Array [
      "Column 1",
      "Column 2",
    ]
  }
  tableData={
    Array [
      Object {
        "name": "Some Data",
        "number": 1,
      },
      Object {
        "name": "More Data",
        "number": 2,
      },
    ]
  }
  title="Data Table"
>
  <Card>
    <article
      className="pf-c-card"
    >
      <div
        style={
          Object {
            "display": "grid",
            "gridTemplateColumns": "max-content auto min-content max-content",
          }
        }
      >
        <FilterComponent
          filter={[Function]}
          onChange={[Function]}
        >
          <div
            className="search-icons"
          >
            <TextInput
              aria-label="Search"
              className=""
              isDisabled={false}
              isReadOnly={false}
              isRequired={false}
              isValid={true}
              onChange={[Function]}
              placeholder="Search..."
              type="text"
              value=""
            >
              <input
                aria-invalid={false}
                aria-label="Search"
                className="pf-c-form-control"
                disabled={false}
                onChange={[Function]}
                placeholder="Search..."
                readOnly={false}
                required={false}
                type="text"
                value=""
              />
            </TextInput>
            <Button
              isDisabled={true}
              onClick={[Function]}
              variant="plain"
            >
              <button
                aria-disabled={null}
                aria-label={null}
                className="pf-c-button pf-m-plain pf-m-disabled"
                disabled={true}
                onClick={[Function]}
                tabIndex={null}
                type="button"
              >
                <svg
                  aria-hidden="true"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                    transform=""
                  />
                </svg>
              </button>
            </Button>
          </div>
        </FilterComponent>
        <span />
        <Button
          isDisabled={false}
          onClick={[Function]}
        >
          <button
            aria-disabled={null}
            aria-label={null}
            className="pf-c-button pf-m-primary"
            disabled={false}
            onClick={[Function]}
            tabIndex={null}
            type="button"
          >
            Add
          </button>
        </Button>
        <Pagination
          className=""
          dropDirection="down"
          itemCount={2}
          itemsEnd={null}
          itemsStart={null}
          onFirstClick={[Function]}
          onLastClick={[Function]}
          onNextClick={[Function]}
          onPageInput={[Function]}
          onPerPageSelect={[Function]}
          onPreviousClick={[Function]}
          onSetPage={[Function]}
          page={1}
          perPage={10}
          perPageOptions={
            Array [
              Object {
                "title": "10",
                "value": 10,
              },
              Object {
                "title": "20",
                "value": 20,
              },
              Object {
                "title": "50",
                "value": 50,
              },
              Object {
                "title": "100",
                "value": 100,
              },
            ]
          }
          titles={
            Object {
              "currPage": "Current page",
              "items": "items",
              "itemsPerPage": "Items per page",
              "optionsToggle": "Select",
              "pages": "pages",
              "paginationTitle": "Pagination",
              "perPageSuffix": "per page",
              "toFirstPage": "Go to first page",
              "toLastPage": "Go to last page",
              "toNextPage": "Go to next page",
              "toPreviousPage": "Go to previous page",
            }
          }
          toggleTemplate={[Function]}
          variant="top"
          widgetId="pagination-options-menu-top"
        >
          <div
            className="pf-c-pagination"
          >
            <div
              className="pf-c-pagination__total-items"
            >
              2 items
            </div>
            <PaginationOptionsMenu
              className=""
              dropDirection="down"
              firstIndex={1}
              itemCount={2}
              itemsPerPageTitle="Items per page"
              itemsTitle="items"
              lastIndex={2}
              onPerPageSelect={[Function]}
              optionsToggle="Select"
              perPage={10}
              perPageOptions={
                Array [
                  Object {
                    "title": "10",
                    "value": 10,
                  },
                  Object {
                    "title": "20",
                    "value": 20,
                  },
                  Object {
                    "title": "50",
                    "value": 50,
                  },
                  Object {
                    "title": "100",
                    "value": 100,
                  },
                ]
              }
              perPageSuffix="per page"
              toggleTemplate={[Function]}
              widgetId="pagination-options-menu-top"
            >
              <div
                className="pf-c-options-menu"
              >
                <span
                  hidden={true}
                  id="pagination-options-menu-top-label"
                >
                  Items per page
                  :
                </span>
                <Dropdown
                  className=""
                  direction="down"
                  dropdownItems={
                    Array [
                      <Item
                        className="pf-c-options-menu__menu-item pf-m-selected"
                        component="button"
                        data-action="per-page-10"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        10
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                        <i
                          className="pf-c-options-menu__menu-item-icon"
                        >
                          <CheckIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </i>
                      </Item>,
                      <Item
                        className="pf-c-options-menu__menu-item"
                        component="button"
                        data-action="per-page-20"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        20
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                      </Item>,
                      <Item
                        className="pf-c-options-menu__menu-item"
                        component="button"
                        data-action="per-page-50"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        50
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                      </Item>,
                      <Item
                        className="pf-c-options-menu__menu-item"
                        component="button"
                        data-action="per-page-100"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        100
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                      </Item>,
                    ]
                  }
                  isGrouped={false}
                  isOpen={false}
                  isPlain={true}
                  onSelect={[Function]}
                  position="left"
                  toggle={
                    <OptionsToggle
                      firstIndex={1}
                      isOpen={false}
                      itemCount={2}
                      itemsTitle="items"
                      lastIndex={2}
                      onToggle={[Function]}
                      optionsToggle="Select"
                      toggleTemplate={[Function]}
                      widgetId="pagination-options-menu-top"
                    />
                  }
                >
                  <div
                    className="pf-c-dropdown"
                  >
                    <OptionsToggle
                      ariaHasPopup={true}
                      firstIndex={1}
                      id="pf-toggle-id-4"
                      isOpen={false}
                      isPlain={true}
                      itemCount={2}
                      itemsTitle="items"
                      key=".0"
                      lastIndex={2}
                      onEnter={[Function]}
                      onToggle={[Function]}
                      optionsToggle="Select"
                      toggleTemplate={[Function]}
                      widgetId="pagination-options-menu-top"
                    >
                      <div
                        className="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                      >
                        <span
                          className="pf-c-options-menu__toggle-text"
                        >
                          <ToggleTemplate
                            firstIndex={1}
                            itemCount={2}
                            itemsTitle="items"
                            lastIndex={2}
                          >
                            <strong>
                              1
                               - 
                              2
                            </strong>
                             
                            of 
                            <strong>
                              2
                            </strong>
                             
                            items
                          </ToggleTemplate>
                        </span>
                        <button
                          aria-expanded={false}
                          aria-haspopup="listbox"
                          aria-label="Select"
                          aria-labelledby="pagination-options-menu-top-toggle pagination-options-menu-top-label"
                          className="pf-c-options-menu__toggle-button"
                          id="pagination-options-menu-top-toggle"
                          onClick={[Function]}
                          type="button"
                        >
                          <CaretDownIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 320 512"
                              width="1em"
                            >
                              <path
                                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                transform=""
                              />
                            </svg>
                          </CaretDownIcon>
                        </button>
                      </div>
                    </OptionsToggle>
                  </div>
                </Dropdown>
              </div>
            </PaginationOptionsMenu>
            <Navigation
              className=""
              currPage="Current page"
              lastPage={1}
              onFirstClick={[Function]}
              onLastClick={[Function]}
              onNextClick={[Function]}
              onPageInput={[Function]}
              onPreviousClick={[Function]}
              onSetPage={[Function]}
              page={1}
              pagesTitle="pages"
              paginationTitle="Pagination"
              toFirstPage="Go to first page"
              toLastPage="Go to last page"
              toNextPage="Go to next page"
              toPreviousPage="Go to previous page"
            >
              <nav
                aria-label="Pagination"
                className="pf-c-pagination__nav"
              >
                <Button
                  aria-label="Go to first page"
                  data-action="first"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to first page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="first"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleDoubleLeftIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 448 512"
                        width="1em"
                      >
                        <path
                          d="M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z"
                          transform=""
                        />
                      </svg>
                    </AngleDoubleLeftIcon>
                  </button>
                </Button>
                <Button
                  aria-label="Go to previous page"
                  data-action="previous"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to previous page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="previous"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleLeftIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 256 512"
                        width="1em"
                      >
                        <path
                          d="M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"
                          transform=""
                        />
                      </svg>
                    </AngleLeftIcon>
                  </button>
                </Button>
                <div
                  className="pf-c-pagination__nav-page-select"
                >
                  <input
                    aria-label="Current page"
                    className="pf-c-form-control"
                    max={1}
                    min="1"
                    onChange={[Function]}
                    type="number"
                    value={1}
                  />
                  <span
                    aria-hidden="true"
                  >
                    of 
                    1
                     
                    pages
                  </span>
                </div>
                <Button
                  aria-label="Go to next page"
                  data-action="next"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to next page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="next"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleRightIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 256 512"
                        width="1em"
                      >
                        <path
                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                          transform=""
                        />
                      </svg>
                    </AngleRightIcon>
                  </button>
                </Button>
                <Button
                  aria-label="Go to last page"
                  data-action="last"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to last page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="last"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleDoubleRightIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 448 512"
                        width="1em"
                      >
                        <path
                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z"
                          transform=""
                        />
                      </svg>
                    </AngleDoubleRightIcon>
                  </button>
                </Button>
              </nav>
            </Navigation>
          </div>
        </Pagination>
      </div>
      <Table
        borders={true}
        caption="Data Table"
        cells={
          Array [
            Object {
              "cellTransforms": Array [
                [Function],
              ],
              "props": Object {},
              "title": "Column 1",
              "transforms": undefined,
            },
            Object {
              "cellTransforms": Array [
                [Function],
              ],
              "props": Object {},
              "title": "Column 2",
              "transforms": Array [
                [Function],
              ],
            },
            Object {
              "cellTransforms": Array [
                [Function],
              ],
              "props": Object {},
              "title": "",
              "transforms": undefined,
            },
          ]
        }
        className=""
        contentId="expanded-content"
        dropdownDirection="down"
        dropdownPosition="right"
        expandId="expandable-toggle"
        gridBreakPoint="grid-md"
        onCollapse={null}
        onExpand={null}
        onSort={[Function]}
        role="grid"
        rowLabeledBy="simple-node"
        rows={
          Array [
            Object {
              "cells": Array [
                Object {
                  "title": <EditableComponent
                    editor={
                      <input
                        id="editor"
                      />
                    }
                    isEditing={false}
                    viewer={
                      <span
                        id="viewer"
                      >
                        Some Data
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={<input />}
                    isEditing={false}
                    viewer={
                      <span>
                        1
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={
                      <span>
                        <Button
                          aria-label="Save"
                          onClick={[Function]}
                          variant="link"
                        >
                          <SaveIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Cancel"
                          onClick={[Function]}
                          variant="link"
                        >
                          <CloseIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                    isEditing={false}
                    viewer={
                      <span>
                        <Button
                          aria-label="Edit"
                          onClick={[Function]}
                          variant="link"
                        >
                          <EditIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Delete"
                          onClick={[Function]}
                          variant="link"
                        >
                          <TrashIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                  />,
                },
              ],
            },
            Object {
              "cells": Array [
                Object {
                  "title": <EditableComponent
                    editor={
                      <input
                        id="editor"
                      />
                    }
                    isEditing={false}
                    viewer={
                      <span
                        id="viewer"
                      >
                        More Data
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={<input />}
                    isEditing={false}
                    viewer={
                      <span>
                        2
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={
                      <span>
                        <Button
                          aria-label="Save"
                          onClick={[Function]}
                          variant="link"
                        >
                          <SaveIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Cancel"
                          onClick={[Function]}
                          variant="link"
                        >
                          <CloseIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                    isEditing={false}
                    viewer={
                      <span>
                        <Button
                          aria-label="Edit"
                          onClick={[Function]}
                          variant="link"
                        >
                          <EditIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Delete"
                          onClick={[Function]}
                          variant="link"
                        >
                          <TrashIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                  />,
                },
              ],
            },
          ]
        }
        sortBy={Object {}}
        variant={null}
      >
        <Provider
          className="pf-c-table pf-m-grid-md"
          columns={
            Array [
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "data": undefined,
                "extraParams": Object {
                  "actionResolver": undefined,
                  "actions": undefined,
                  "allRowsSelected": false,
                  "areActionsDisabled": undefined,
                  "contentId": "expanded-content",
                  "dropdownDirection": "down",
                  "dropdownPosition": "right",
                  "expandId": "expandable-toggle",
                  "firstUserColumnIndex": 0,
                  "onCollapse": null,
                  "onExpand": null,
                  "onSelect": undefined,
                  "onSort": [Function],
                  "rowLabeledBy": "simple-node",
                  "sortBy": Object {},
                },
                "header": Object {
                  "formatters": Array [],
                  "label": "Column 1",
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "property": "column-1",
                "props": Object {
                  "data-key": 0,
                  "data-label": "Column 1",
                },
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "data": undefined,
                "extraParams": Object {
                  "actionResolver": undefined,
                  "actions": undefined,
                  "allRowsSelected": false,
                  "areActionsDisabled": undefined,
                  "contentId": "expanded-content",
                  "dropdownDirection": "down",
                  "dropdownPosition": "right",
                  "expandId": "expandable-toggle",
                  "firstUserColumnIndex": 0,
                  "onCollapse": null,
                  "onExpand": null,
                  "onSelect": undefined,
                  "onSort": [Function],
                  "rowLabeledBy": "simple-node",
                  "sortBy": Object {},
                },
                "header": Object {
                  "formatters": Array [],
                  "label": "Column 2",
                  "transforms": Array [
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "property": "column-2",
                "props": Object {
                  "data-key": 1,
                  "data-label": "Column 2",
                },
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "data": undefined,
                "extraParams": Object {
                  "actionResolver": undefined,
                  "actions": undefined,
                  "allRowsSelected": false,
                  "areActionsDisabled": undefined,
                  "contentId": "expanded-content",
                  "dropdownDirection": "down",
                  "dropdownPosition": "right",
                  "expandId": "expandable-toggle",
                  "firstUserColumnIndex": 0,
                  "onCollapse": null,
                  "onExpand": null,
                  "onSelect": undefined,
                  "onSort": [Function],
                  "rowLabeledBy": "simple-node",
                  "sortBy": Object {},
                },
                "header": Object {
                  "formatters": Array [],
                  "label": "",
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "property": "column-2",
                "props": Object {
                  "data-key": 2,
                  "data-label": "",
                },
              },
            ]
          }
          renderers={
            Object {
              "body": Object {
                "cell": [Function],
                "row": [Function],
                "wrapper": [Function],
              },
              "header": Object {
                "cell": [Function],
              },
            }
          }
          role="grid"
        >
          <table
            className="pf-c-table pf-m-grid-md"
            role="grid"
          >
            <caption>
              Data Table
            </caption>
            <TableHeader
              className=""
            >
              <ContextHeader
                className=""
              >
                <Header
                  className=""
                >
                  <thead
                    className=""
                  >
                    <HeaderRow
                      key="0-header-row"
                      onRow={[Function]}
                      renderers={
                        Object {
                          "cell": [Function],
                          "row": "tr",
                          "wrapper": "thead",
                        }
                      }
                      rowData={
                        Array [
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": undefined,
                              "actions": undefined,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "onCollapse": null,
                              "onExpand": null,
                              "onSelect": undefined,
                              "onSort": [Function],
                              "rowLabeledBy": "simple-node",
                              "sortBy": Object {},
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "Column 1",
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-1",
                            "props": Object {
                              "data-key": 0,
                              "data-label": "Column 1",
                            },
                          },
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": undefined,
                              "actions": undefined,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "onCollapse": null,
                              "onExpand": null,
                              "onSelect": undefined,
                              "onSort": [Function],
                              "rowLabeledBy": "simple-node",
                              "sortBy": Object {},
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "Column 2",
                              "transforms": Array [
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-2",
                            "props": Object {
                              "data-key": 1,
                              "data-label": "Column 2",
                            },
                          },
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": undefined,
                              "actions": undefined,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "onCollapse": null,
                              "onExpand": null,
                              "onSelect": undefined,
                              "onSort": [Function],
                              "rowLabeledBy": "simple-node",
                              "sortBy": Object {},
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "",
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-2",
                            "props": Object {
                              "data-key": 2,
                              "data-label": "",
                            },
                          },
                        ]
                      }
                      rowIndex={0}
                    >
                      <tr>
                        <HeaderCell
                          component="th"
                          data-key={0}
                          data-label="Column 1"
                          key="0-header"
                          scope="col"
                          textCenter={false}
                        >
                          <th
                            className=""
                            data-key={0}
                            scope="col"
                          >
                            Column 1
                          </th>
                        </HeaderCell>
                        <HeaderCell
                          aria-sort="none"
                          className="pf-c-table__sort"
                          component="th"
                          data-key={1}
                          data-label="Column 2"
                          key="1-header"
                          scope="col"
                          textCenter={false}
                        >
                          <th
                            aria-sort="none"
                            className="pf-c-table__sort"
                            data-key={1}
                            scope="col"
                          >
                            <SortColumn
                              className="pf-c-button pf-m-plain"
                              isSortedBy={false}
                              onSort={[Function]}
                              sortDirection=""
                            >
                              <button
                                className="pf-c-button pf-m-plain"
                                onClick={[Function]}
                              >
                                Column 2
                                <span
                                  className="pf-c-table__sort-indicator"
                                >
                                  <ArrowsAltVIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 256 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                        transform=""
                                      />
                                    </svg>
                                  </ArrowsAltVIcon>
                                </span>
                              </button>
                            </SortColumn>
                          </th>
                        </HeaderCell>
                        <HeaderCell
                          component="th"
                          data-key={2}
                          data-label=""
                          key="2-header"
                          scope=""
                          textCenter={false}
                        >
                          <th
                            className=""
                            data-key={2}
                          />
                        </HeaderCell>
                      </tr>
                    </HeaderRow>
                  </thead>
                </Header>
              </ContextHeader>
            </TableHeader>
            <TableBody
              className=""
              onRowClick={[Function]}
              rowKey="id"
            >
              <ContextBody
                className=""
                headerData={
                  Array [
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": null,
                        "onExpand": null,
                        "onSelect": undefined,
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Column 1",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-1",
                      "props": Object {
                        "data-key": 0,
                        "data-label": "Column 1",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": null,
                        "onExpand": null,
                        "onSelect": undefined,
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Column 2",
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-2",
                      "props": Object {
                        "data-key": 1,
                        "data-label": "Column 2",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": null,
                        "onExpand": null,
                        "onSelect": undefined,
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-2",
                      "props": Object {
                        "data-key": 2,
                        "data-label": "",
                      },
                    },
                  ]
                }
                onRow={[Function]}
                onRowClick={[Function]}
                rowKey="id"
                rows={
                  Array [
                    Object {
                      "cells": Array [
                        Object {
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                Some Data
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={<input />}
                            isEditing={false}
                            viewer={
                              <span>
                                1
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                      ],
                    },
                    Object {
                      "cells": Array [
                        Object {
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                More Data
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={<input />}
                            isEditing={false}
                            viewer={
                              <span>
                                2
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                      ],
                    },
                  ]
                }
              >
                <Body
                  className=""
                  mappedRows={
                    Array [
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  Some Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  1
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                Some Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 0,
                        "isExpanded": undefined,
                        "isFirst": true,
                        "isFirstVisible": true,
                        "isLast": false,
                        "isLastVisible": false,
                      },
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  More Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  2
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                More Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 1,
                        "isExpanded": undefined,
                        "isFirst": false,
                        "isFirstVisible": false,
                        "isLast": true,
                        "isLastVisible": true,
                      },
                    ]
                  }
                  onRow={[Function]}
                  rowKey="id"
                  rows={
                    Array [
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  Some Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  1
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                Some Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 0,
                        "isExpanded": undefined,
                        "isFirst": true,
                        "isFirstVisible": true,
                        "isLast": false,
                        "isLastVisible": false,
                      },
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  More Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  2
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                More Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 1,
                        "isExpanded": undefined,
                        "isFirst": false,
                        "isFirstVisible": false,
                        "isLast": true,
                        "isLastVisible": true,
                      },
                    ]
                  }
                >
                  <BodyWrapper
                    className=""
                    mappedRows={
                      Array [
                        Object {
                          "cells": Array [
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    Some Data
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={<input />}
                                isEditing={false}
                                viewer={
                                  <span>
                                    1
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                          ],
                          "column-1": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  Some Data
                                </span>
                              }
                            />,
                          },
                          "column-2": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                          "id": 0,
                          "isExpanded": undefined,
                          "isFirst": true,
                          "isFirstVisible": true,
                          "isLast": false,
                          "isLastVisible": false,
                        },
                        Object {
                          "cells": Array [
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    More Data
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={<input />}
                                isEditing={false}
                                viewer={
                                  <span>
                                    2
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                          ],
                          "column-1": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  More Data
                                </span>
                              }
                            />,
                          },
                          "column-2": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                          "id": 1,
                          "isExpanded": undefined,
                          "isFirst": false,
                          "isFirstVisible": false,
                          "isLast": true,
                          "isLastVisible": true,
                        },
                      ]
                    }
                    onCollapse={null}
                    rows={Array []}
                    tbodyRef={null}
                  >
                    <tbody
                      className=""
                    >
                      <BodyRow
                        columns={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 1",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-1",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Column 1",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 2",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Column 2",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "",
                              },
                            },
                          ]
                        }
                        key="0-row"
                        onRow={[Function]}
                        renderers={
                          Object {
                            "cell": [Function],
                            "row": [Function],
                            "wrapper": [Function],
                          }
                        }
                        rowData={
                          Object {
                            "cells": Array [
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      Some Data
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={<input />}
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      1
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                            ],
                            "column-1": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    Some Data
                                  </span>
                                }
                              />,
                            },
                            "column-2": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                            "id": 0,
                            "isExpanded": undefined,
                            "isFirst": true,
                            "isFirstVisible": true,
                            "isLast": false,
                            "isLastVisible": false,
                          }
                        }
                        rowIndex={0}
                        rowKey="0-row"
                      >
                        <RowWrapper
                          className=""
                          onMouseDown={[Function]}
                          row={
                            Object {
                              "cells": Array [
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <input
                                        id="editor"
                                      />
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span
                                        id="viewer"
                                      >
                                        Some Data
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={<input />}
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        1
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <span>
                                        <Button
                                          aria-label="Save"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <SaveIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Cancel"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <CloseIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        <Button
                                          aria-label="Edit"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <EditIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Delete"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <TrashIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                  />,
                                },
                              ],
                              "column-1": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      Some Data
                                    </span>
                                  }
                                />,
                              },
                              "column-2": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                              "id": 0,
                              "isExpanded": undefined,
                              "isFirst": true,
                              "isFirstVisible": true,
                              "isLast": false,
                              "isLastVisible": false,
                            }
                          }
                          rowProps={
                            Object {
                              "rowIndex": 0,
                              "rowKey": "0-row",
                            }
                          }
                        >
                          <tr
                            className=""
                            hidden={false}
                            onMouseDown={[Function]}
                          >
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={0}
                              data-label="Column 1"
                              isVisible={true}
                              key="0-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={0}
                                data-label="Column 1"
                              >
                                <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      Some Data
                                    </span>
                                  }
                                >
                                  <span
                                    id="viewer"
                                    key="0"
                                  >
                                    Some Data
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={1}
                              data-label="Column 2"
                              isVisible={true}
                              key="1-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={1}
                                data-label="Column 2"
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={2}
                              data-label=""
                              isVisible={true}
                              key="2-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={2}
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                          </tr>
                        </RowWrapper>
                      </BodyRow>
                      <BodyRow
                        columns={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 1",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-1",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Column 1",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 2",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Column 2",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "",
                              },
                            },
                          ]
                        }
                        key="1-row"
                        onRow={[Function]}
                        renderers={
                          Object {
                            "cell": [Function],
                            "row": [Function],
                            "wrapper": [Function],
                          }
                        }
                        rowData={
                          Object {
                            "cells": Array [
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      More Data
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={<input />}
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      2
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                            ],
                            "column-1": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    More Data
                                  </span>
                                }
                              />,
                            },
                            "column-2": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                            "id": 1,
                            "isExpanded": undefined,
                            "isFirst": false,
                            "isFirstVisible": false,
                            "isLast": true,
                            "isLastVisible": true,
                          }
                        }
                        rowIndex={1}
                        rowKey="1-row"
                      >
                        <RowWrapper
                          className=""
                          onMouseDown={[Function]}
                          row={
                            Object {
                              "cells": Array [
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <input
                                        id="editor"
                                      />
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span
                                        id="viewer"
                                      >
                                        More Data
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={<input />}
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        2
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <span>
                                        <Button
                                          aria-label="Save"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <SaveIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Cancel"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <CloseIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        <Button
                                          aria-label="Edit"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <EditIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Delete"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <TrashIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                  />,
                                },
                              ],
                              "column-1": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      More Data
                                    </span>
                                  }
                                />,
                              },
                              "column-2": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                              "id": 1,
                              "isExpanded": undefined,
                              "isFirst": false,
                              "isFirstVisible": false,
                              "isLast": true,
                              "isLastVisible": true,
                            }
                          }
                          rowProps={
                            Object {
                              "rowIndex": 1,
                              "rowKey": "1-row",
                            }
                          }
                        >
                          <tr
                            className=""
                            hidden={false}
                            onMouseDown={[Function]}
                          >
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={0}
                              data-label="Column 1"
                              isVisible={true}
                              key="0-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={0}
                                data-label="Column 1"
                              >
                                <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      More Data
                                    </span>
                                  }
                                >
                                  <span
                                    id="viewer"
                                    key="0"
                                  >
                                    More Data
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={1}
                              data-label="Column 2"
                              isVisible={true}
                              key="1-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={1}
                                data-label="Column 2"
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={2}
                              data-label=""
                              isVisible={true}
                              key="2-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={2}
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                          </tr>
                        </RowWrapper>
                      </BodyRow>
                    </tbody>
                  </BodyWrapper>
                </Body>
              </ContextBody>
            </TableBody>
          </table>
        </Provider>
      </Table>
    </article>
  </Card>
</MockDataTable>
`;

exports[`DataTable component should render correctly with a few rows 1`] = `
<Card>
  <div
    style={
      Object {
        "display": "grid",
        "gridTemplateColumns": "max-content auto min-content max-content",
      }
    }
  >
    <FilterComponent
      filter={[Function]}
      onChange={[Function]}
    />
    <span />
    <Button
      isDisabled={false}
      onClick={[Function]}
    >
      Add
    </Button>
    <Pagination
      className=""
      dropDirection="down"
      itemCount={2}
      itemsEnd={null}
      itemsStart={null}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "items",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Select",
          "pages": "pages",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="top"
      widgetId="pagination-options-menu-top"
    />
  </div>
  <Table
    borders={true}
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    className=""
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={null}
    onExpand={null}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span>
                    <Button
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span>
                    <Button
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span>
                    <Button
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span>
                    <Button
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <TableHeader
      className=""
    />
    <TableBody
      className=""
      onRowClick={[Function]}
      rowKey="id"
    />
  </Table>
</Card>
`;

exports[`DataTable component should render correctly with no rows 1`] = `
<Card>
  <div
    style={
      Object {
        "display": "grid",
        "gridTemplateColumns": "max-content auto min-content max-content",
      }
    }
  >
    <FilterComponent
      filter={[Function]}
      onChange={[Function]}
    />
    <span />
    <Button
      isDisabled={false}
      onClick={[Function]}
    >
      Add
    </Button>
    <Pagination
      className=""
      dropDirection="down"
      itemCount={0}
      itemsEnd={null}
      itemsStart={null}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "items",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Select",
          "pages": "pages",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="top"
      widgetId="pagination-options-menu-top"
    />
  </div>
  <Table
    borders={true}
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    className=""
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={null}
    onExpand={null}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={Array []}
    sortBy={Object {}}
    variant={null}
  >
    <TableHeader
      className=""
    />
    <TableBody
      className=""
      onRowClick={[Function]}
      rowKey="id"
    />
  </Table>
</Card>
`;

exports[`DataTable component should render editor for new row 1`] = `
<article
  className="pf-c-card"
>
  <div
    style={
      Object {
        "display": "grid",
        "gridTemplateColumns": "max-content auto min-content max-content",
      }
    }
  >
    <FilterComponent
      filter={[Function]}
      onChange={[Function]}
    />
    <span />
    <Button
      isDisabled={true}
      onClick={[Function]}
    >
      Add
    </Button>
    <Pagination
      className=""
      dropDirection="down"
      itemCount={2}
      itemsEnd={null}
      itemsStart={null}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "items",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Select",
          "pages": "pages",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="top"
      widgetId="pagination-options-menu-top"
    />
  </div>
  <Table
    borders={true}
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    className=""
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={null}
    onExpand={null}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <input
                id="editor"
              />,
            },
            Object {
              "title": <input />,
            },
            Object {
              "title": <span>
                <Button
                  aria-label="Save"
                  onClick={[Function]}
                  variant="link"
                >
                  <SaveIcon
                    color="currentColor"
                    size="sm"
                    title={null}
                  />
                </Button>
                <Button
                  aria-label="Cancel"
                  onClick={[Function]}
                  variant="link"
                >
                  <CloseIcon
                    color="currentColor"
                    size="sm"
                    title={null}
                  />
                </Button>
              </span>,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span>
                    <Button
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span>
                    <Button
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span>
                    <Button
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span>
                    <Button
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <TableHeader
      className=""
    />
    <TableBody
      className=""
      onRowClick={[Function]}
      rowKey="id"
    />
  </Table>
</article>
`;

exports[`DataTable component should render rows in reverse of sorted order when descending 1`] = `
<MockDataTable
  columnTitles={
    Array [
      "Column 1",
      "Column 2",
    ]
  }
  tableData={
    Array [
      Object {
        "name": "Some Data",
        "number": 1,
      },
      Object {
        "name": "More Data",
        "number": 2,
      },
    ]
  }
  title="Data Table"
>
  <Card>
    <article
      className="pf-c-card"
    >
      <div
        style={
          Object {
            "display": "grid",
            "gridTemplateColumns": "max-content auto min-content max-content",
          }
        }
      >
        <FilterComponent
          filter={[Function]}
          onChange={[Function]}
        >
          <div
            className="search-icons"
          >
            <TextInput
              aria-label="Search"
              className=""
              isDisabled={false}
              isReadOnly={false}
              isRequired={false}
              isValid={true}
              onChange={[Function]}
              placeholder="Search..."
              type="text"
              value=""
            >
              <input
                aria-invalid={false}
                aria-label="Search"
                className="pf-c-form-control"
                disabled={false}
                onChange={[Function]}
                placeholder="Search..."
                readOnly={false}
                required={false}
                type="text"
                value=""
              />
            </TextInput>
            <Button
              isDisabled={true}
              onClick={[Function]}
              variant="plain"
            >
              <button
                aria-disabled={null}
                aria-label={null}
                className="pf-c-button pf-m-plain pf-m-disabled"
                disabled={true}
                onClick={[Function]}
                tabIndex={null}
                type="button"
              >
                <svg
                  aria-hidden="true"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                    transform=""
                  />
                </svg>
              </button>
            </Button>
          </div>
        </FilterComponent>
        <span />
        <Button
          isDisabled={false}
          onClick={[Function]}
        >
          <button
            aria-disabled={null}
            aria-label={null}
            className="pf-c-button pf-m-primary"
            disabled={false}
            onClick={[Function]}
            tabIndex={null}
            type="button"
          >
            Add
          </button>
        </Button>
        <Pagination
          className=""
          dropDirection="down"
          itemCount={2}
          itemsEnd={null}
          itemsStart={null}
          onFirstClick={[Function]}
          onLastClick={[Function]}
          onNextClick={[Function]}
          onPageInput={[Function]}
          onPerPageSelect={[Function]}
          onPreviousClick={[Function]}
          onSetPage={[Function]}
          page={1}
          perPage={10}
          perPageOptions={
            Array [
              Object {
                "title": "10",
                "value": 10,
              },
              Object {
                "title": "20",
                "value": 20,
              },
              Object {
                "title": "50",
                "value": 50,
              },
              Object {
                "title": "100",
                "value": 100,
              },
            ]
          }
          titles={
            Object {
              "currPage": "Current page",
              "items": "items",
              "itemsPerPage": "Items per page",
              "optionsToggle": "Select",
              "pages": "pages",
              "paginationTitle": "Pagination",
              "perPageSuffix": "per page",
              "toFirstPage": "Go to first page",
              "toLastPage": "Go to last page",
              "toNextPage": "Go to next page",
              "toPreviousPage": "Go to previous page",
            }
          }
          toggleTemplate={[Function]}
          variant="top"
          widgetId="pagination-options-menu-top"
        >
          <div
            className="pf-c-pagination"
          >
            <div
              className="pf-c-pagination__total-items"
            >
              2 items
            </div>
            <PaginationOptionsMenu
              className=""
              dropDirection="down"
              firstIndex={1}
              itemCount={2}
              itemsPerPageTitle="Items per page"
              itemsTitle="items"
              lastIndex={2}
              onPerPageSelect={[Function]}
              optionsToggle="Select"
              perPage={10}
              perPageOptions={
                Array [
                  Object {
                    "title": "10",
                    "value": 10,
                  },
                  Object {
                    "title": "20",
                    "value": 20,
                  },
                  Object {
                    "title": "50",
                    "value": 50,
                  },
                  Object {
                    "title": "100",
                    "value": 100,
                  },
                ]
              }
              perPageSuffix="per page"
              toggleTemplate={[Function]}
              widgetId="pagination-options-menu-top"
            >
              <div
                className="pf-c-options-menu"
              >
                <span
                  hidden={true}
                  id="pagination-options-menu-top-label"
                >
                  Items per page
                  :
                </span>
                <Dropdown
                  className=""
                  direction="down"
                  dropdownItems={
                    Array [
                      <Item
                        className="pf-c-options-menu__menu-item pf-m-selected"
                        component="button"
                        data-action="per-page-10"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        10
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                        <i
                          className="pf-c-options-menu__menu-item-icon"
                        >
                          <CheckIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </i>
                      </Item>,
                      <Item
                        className="pf-c-options-menu__menu-item"
                        component="button"
                        data-action="per-page-20"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        20
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                      </Item>,
                      <Item
                        className="pf-c-options-menu__menu-item"
                        component="button"
                        data-action="per-page-50"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        50
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                      </Item>,
                      <Item
                        className="pf-c-options-menu__menu-item"
                        component="button"
                        data-action="per-page-100"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        100
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                      </Item>,
                    ]
                  }
                  isGrouped={false}
                  isOpen={false}
                  isPlain={true}
                  onSelect={[Function]}
                  position="left"
                  toggle={
                    <OptionsToggle
                      firstIndex={1}
                      isOpen={false}
                      itemCount={2}
                      itemsTitle="items"
                      lastIndex={2}
                      onToggle={[Function]}
                      optionsToggle="Select"
                      toggleTemplate={[Function]}
                      widgetId="pagination-options-menu-top"
                    />
                  }
                >
                  <div
                    className="pf-c-dropdown"
                  >
                    <OptionsToggle
                      ariaHasPopup={true}
                      firstIndex={1}
                      id="pf-toggle-id-11"
                      isOpen={false}
                      isPlain={true}
                      itemCount={2}
                      itemsTitle="items"
                      key=".0"
                      lastIndex={2}
                      onEnter={[Function]}
                      onToggle={[Function]}
                      optionsToggle="Select"
                      toggleTemplate={[Function]}
                      widgetId="pagination-options-menu-top"
                    >
                      <div
                        className="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                      >
                        <span
                          className="pf-c-options-menu__toggle-text"
                        >
                          <ToggleTemplate
                            firstIndex={1}
                            itemCount={2}
                            itemsTitle="items"
                            lastIndex={2}
                          >
                            <strong>
                              1
                               - 
                              2
                            </strong>
                             
                            of 
                            <strong>
                              2
                            </strong>
                             
                            items
                          </ToggleTemplate>
                        </span>
                        <button
                          aria-expanded={false}
                          aria-haspopup="listbox"
                          aria-label="Select"
                          aria-labelledby="pagination-options-menu-top-toggle pagination-options-menu-top-label"
                          className="pf-c-options-menu__toggle-button"
                          id="pagination-options-menu-top-toggle"
                          onClick={[Function]}
                          type="button"
                        >
                          <CaretDownIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 320 512"
                              width="1em"
                            >
                              <path
                                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                transform=""
                              />
                            </svg>
                          </CaretDownIcon>
                        </button>
                      </div>
                    </OptionsToggle>
                  </div>
                </Dropdown>
              </div>
            </PaginationOptionsMenu>
            <Navigation
              className=""
              currPage="Current page"
              lastPage={1}
              onFirstClick={[Function]}
              onLastClick={[Function]}
              onNextClick={[Function]}
              onPageInput={[Function]}
              onPreviousClick={[Function]}
              onSetPage={[Function]}
              page={1}
              pagesTitle="pages"
              paginationTitle="Pagination"
              toFirstPage="Go to first page"
              toLastPage="Go to last page"
              toNextPage="Go to next page"
              toPreviousPage="Go to previous page"
            >
              <nav
                aria-label="Pagination"
                className="pf-c-pagination__nav"
              >
                <Button
                  aria-label="Go to first page"
                  data-action="first"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to first page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="first"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleDoubleLeftIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 448 512"
                        width="1em"
                      >
                        <path
                          d="M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z"
                          transform=""
                        />
                      </svg>
                    </AngleDoubleLeftIcon>
                  </button>
                </Button>
                <Button
                  aria-label="Go to previous page"
                  data-action="previous"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to previous page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="previous"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleLeftIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 256 512"
                        width="1em"
                      >
                        <path
                          d="M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"
                          transform=""
                        />
                      </svg>
                    </AngleLeftIcon>
                  </button>
                </Button>
                <div
                  className="pf-c-pagination__nav-page-select"
                >
                  <input
                    aria-label="Current page"
                    className="pf-c-form-control"
                    max={1}
                    min="1"
                    onChange={[Function]}
                    type="number"
                    value={1}
                  />
                  <span
                    aria-hidden="true"
                  >
                    of 
                    1
                     
                    pages
                  </span>
                </div>
                <Button
                  aria-label="Go to next page"
                  data-action="next"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to next page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="next"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleRightIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 256 512"
                        width="1em"
                      >
                        <path
                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                          transform=""
                        />
                      </svg>
                    </AngleRightIcon>
                  </button>
                </Button>
                <Button
                  aria-label="Go to last page"
                  data-action="last"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to last page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="last"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleDoubleRightIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 448 512"
                        width="1em"
                      >
                        <path
                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z"
                          transform=""
                        />
                      </svg>
                    </AngleDoubleRightIcon>
                  </button>
                </Button>
              </nav>
            </Navigation>
          </div>
        </Pagination>
      </div>
      <Table
        borders={true}
        caption="Data Table"
        cells={
          Array [
            Object {
              "cellTransforms": Array [
                [Function],
              ],
              "props": Object {},
              "title": "Column 1",
              "transforms": undefined,
            },
            Object {
              "cellTransforms": Array [
                [Function],
              ],
              "props": Object {},
              "title": "Column 2",
              "transforms": Array [
                [Function],
              ],
            },
            Object {
              "cellTransforms": Array [
                [Function],
              ],
              "props": Object {},
              "title": "",
              "transforms": undefined,
            },
          ]
        }
        className=""
        contentId="expanded-content"
        dropdownDirection="down"
        dropdownPosition="right"
        expandId="expandable-toggle"
        gridBreakPoint="grid-md"
        onCollapse={null}
        onExpand={null}
        onSort={[Function]}
        role="grid"
        rowLabeledBy="simple-node"
        rows={
          Array [
            Object {
              "cells": Array [
                Object {
                  "title": <EditableComponent
                    editor={
                      <input
                        id="editor"
                      />
                    }
                    isEditing={false}
                    viewer={
                      <span
                        id="viewer"
                      >
                        Some Data
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={<input />}
                    isEditing={false}
                    viewer={
                      <span>
                        1
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={
                      <span>
                        <Button
                          aria-label="Save"
                          onClick={[Function]}
                          variant="link"
                        >
                          <SaveIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Cancel"
                          onClick={[Function]}
                          variant="link"
                        >
                          <CloseIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                    isEditing={false}
                    viewer={
                      <span>
                        <Button
                          aria-label="Edit"
                          onClick={[Function]}
                          variant="link"
                        >
                          <EditIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Delete"
                          onClick={[Function]}
                          variant="link"
                        >
                          <TrashIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                  />,
                },
              ],
            },
            Object {
              "cells": Array [
                Object {
                  "title": <EditableComponent
                    editor={
                      <input
                        id="editor"
                      />
                    }
                    isEditing={false}
                    viewer={
                      <span
                        id="viewer"
                      >
                        More Data
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={<input />}
                    isEditing={false}
                    viewer={
                      <span>
                        2
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={
                      <span>
                        <Button
                          aria-label="Save"
                          onClick={[Function]}
                          variant="link"
                        >
                          <SaveIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Cancel"
                          onClick={[Function]}
                          variant="link"
                        >
                          <CloseIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                    isEditing={false}
                    viewer={
                      <span>
                        <Button
                          aria-label="Edit"
                          onClick={[Function]}
                          variant="link"
                        >
                          <EditIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Delete"
                          onClick={[Function]}
                          variant="link"
                        >
                          <TrashIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                  />,
                },
              ],
            },
          ]
        }
        sortBy={Object {}}
        variant={null}
      >
        <Provider
          className="pf-c-table pf-m-grid-md"
          columns={
            Array [
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "data": undefined,
                "extraParams": Object {
                  "actionResolver": undefined,
                  "actions": undefined,
                  "allRowsSelected": false,
                  "areActionsDisabled": undefined,
                  "contentId": "expanded-content",
                  "dropdownDirection": "down",
                  "dropdownPosition": "right",
                  "expandId": "expandable-toggle",
                  "firstUserColumnIndex": 0,
                  "onCollapse": null,
                  "onExpand": null,
                  "onSelect": undefined,
                  "onSort": [Function],
                  "rowLabeledBy": "simple-node",
                  "sortBy": Object {},
                },
                "header": Object {
                  "formatters": Array [],
                  "label": "Column 1",
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "property": "column-1",
                "props": Object {
                  "data-key": 0,
                  "data-label": "Column 1",
                },
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "data": undefined,
                "extraParams": Object {
                  "actionResolver": undefined,
                  "actions": undefined,
                  "allRowsSelected": false,
                  "areActionsDisabled": undefined,
                  "contentId": "expanded-content",
                  "dropdownDirection": "down",
                  "dropdownPosition": "right",
                  "expandId": "expandable-toggle",
                  "firstUserColumnIndex": 0,
                  "onCollapse": null,
                  "onExpand": null,
                  "onSelect": undefined,
                  "onSort": [Function],
                  "rowLabeledBy": "simple-node",
                  "sortBy": Object {},
                },
                "header": Object {
                  "formatters": Array [],
                  "label": "Column 2",
                  "transforms": Array [
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "property": "column-2",
                "props": Object {
                  "data-key": 1,
                  "data-label": "Column 2",
                },
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "data": undefined,
                "extraParams": Object {
                  "actionResolver": undefined,
                  "actions": undefined,
                  "allRowsSelected": false,
                  "areActionsDisabled": undefined,
                  "contentId": "expanded-content",
                  "dropdownDirection": "down",
                  "dropdownPosition": "right",
                  "expandId": "expandable-toggle",
                  "firstUserColumnIndex": 0,
                  "onCollapse": null,
                  "onExpand": null,
                  "onSelect": undefined,
                  "onSort": [Function],
                  "rowLabeledBy": "simple-node",
                  "sortBy": Object {},
                },
                "header": Object {
                  "formatters": Array [],
                  "label": "",
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "property": "column-2",
                "props": Object {
                  "data-key": 2,
                  "data-label": "",
                },
              },
            ]
          }
          renderers={
            Object {
              "body": Object {
                "cell": [Function],
                "row": [Function],
                "wrapper": [Function],
              },
              "header": Object {
                "cell": [Function],
              },
            }
          }
          role="grid"
        >
          <table
            className="pf-c-table pf-m-grid-md"
            role="grid"
          >
            <caption>
              Data Table
            </caption>
            <TableHeader
              className=""
            >
              <ContextHeader
                className=""
              >
                <Header
                  className=""
                >
                  <thead
                    className=""
                  >
                    <HeaderRow
                      key="0-header-row"
                      onRow={[Function]}
                      renderers={
                        Object {
                          "cell": [Function],
                          "row": "tr",
                          "wrapper": "thead",
                        }
                      }
                      rowData={
                        Array [
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": undefined,
                              "actions": undefined,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "onCollapse": null,
                              "onExpand": null,
                              "onSelect": undefined,
                              "onSort": [Function],
                              "rowLabeledBy": "simple-node",
                              "sortBy": Object {},
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "Column 1",
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-1",
                            "props": Object {
                              "data-key": 0,
                              "data-label": "Column 1",
                            },
                          },
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": undefined,
                              "actions": undefined,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "onCollapse": null,
                              "onExpand": null,
                              "onSelect": undefined,
                              "onSort": [Function],
                              "rowLabeledBy": "simple-node",
                              "sortBy": Object {},
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "Column 2",
                              "transforms": Array [
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-2",
                            "props": Object {
                              "data-key": 1,
                              "data-label": "Column 2",
                            },
                          },
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": undefined,
                              "actions": undefined,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "onCollapse": null,
                              "onExpand": null,
                              "onSelect": undefined,
                              "onSort": [Function],
                              "rowLabeledBy": "simple-node",
                              "sortBy": Object {},
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "",
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-2",
                            "props": Object {
                              "data-key": 2,
                              "data-label": "",
                            },
                          },
                        ]
                      }
                      rowIndex={0}
                    >
                      <tr>
                        <HeaderCell
                          component="th"
                          data-key={0}
                          data-label="Column 1"
                          key="0-header"
                          scope="col"
                          textCenter={false}
                        >
                          <th
                            className=""
                            data-key={0}
                            scope="col"
                          >
                            Column 1
                          </th>
                        </HeaderCell>
                        <HeaderCell
                          aria-sort="none"
                          className="pf-c-table__sort"
                          component="th"
                          data-key={1}
                          data-label="Column 2"
                          key="1-header"
                          scope="col"
                          textCenter={false}
                        >
                          <th
                            aria-sort="none"
                            className="pf-c-table__sort"
                            data-key={1}
                            scope="col"
                          >
                            <SortColumn
                              className="pf-c-button pf-m-plain"
                              isSortedBy={false}
                              onSort={[Function]}
                              sortDirection=""
                            >
                              <button
                                className="pf-c-button pf-m-plain"
                                onClick={[Function]}
                              >
                                Column 2
                                <span
                                  className="pf-c-table__sort-indicator"
                                >
                                  <ArrowsAltVIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 256 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                        transform=""
                                      />
                                    </svg>
                                  </ArrowsAltVIcon>
                                </span>
                              </button>
                            </SortColumn>
                          </th>
                        </HeaderCell>
                        <HeaderCell
                          component="th"
                          data-key={2}
                          data-label=""
                          key="2-header"
                          scope=""
                          textCenter={false}
                        >
                          <th
                            className=""
                            data-key={2}
                          />
                        </HeaderCell>
                      </tr>
                    </HeaderRow>
                  </thead>
                </Header>
              </ContextHeader>
            </TableHeader>
            <TableBody
              className=""
              onRowClick={[Function]}
              rowKey="id"
            >
              <ContextBody
                className=""
                headerData={
                  Array [
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": null,
                        "onExpand": null,
                        "onSelect": undefined,
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Column 1",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-1",
                      "props": Object {
                        "data-key": 0,
                        "data-label": "Column 1",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": null,
                        "onExpand": null,
                        "onSelect": undefined,
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Column 2",
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-2",
                      "props": Object {
                        "data-key": 1,
                        "data-label": "Column 2",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": null,
                        "onExpand": null,
                        "onSelect": undefined,
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-2",
                      "props": Object {
                        "data-key": 2,
                        "data-label": "",
                      },
                    },
                  ]
                }
                onRow={[Function]}
                onRowClick={[Function]}
                rowKey="id"
                rows={
                  Array [
                    Object {
                      "cells": Array [
                        Object {
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                Some Data
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={<input />}
                            isEditing={false}
                            viewer={
                              <span>
                                1
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                      ],
                    },
                    Object {
                      "cells": Array [
                        Object {
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                More Data
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={<input />}
                            isEditing={false}
                            viewer={
                              <span>
                                2
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                      ],
                    },
                  ]
                }
              >
                <Body
                  className=""
                  mappedRows={
                    Array [
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  Some Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  1
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                Some Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 0,
                        "isExpanded": undefined,
                        "isFirst": true,
                        "isFirstVisible": true,
                        "isLast": false,
                        "isLastVisible": false,
                      },
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  More Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  2
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                More Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 1,
                        "isExpanded": undefined,
                        "isFirst": false,
                        "isFirstVisible": false,
                        "isLast": true,
                        "isLastVisible": true,
                      },
                    ]
                  }
                  onRow={[Function]}
                  rowKey="id"
                  rows={
                    Array [
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  Some Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  1
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                Some Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 0,
                        "isExpanded": undefined,
                        "isFirst": true,
                        "isFirstVisible": true,
                        "isLast": false,
                        "isLastVisible": false,
                      },
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  More Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  2
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                More Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 1,
                        "isExpanded": undefined,
                        "isFirst": false,
                        "isFirstVisible": false,
                        "isLast": true,
                        "isLastVisible": true,
                      },
                    ]
                  }
                >
                  <BodyWrapper
                    className=""
                    mappedRows={
                      Array [
                        Object {
                          "cells": Array [
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    Some Data
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={<input />}
                                isEditing={false}
                                viewer={
                                  <span>
                                    1
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                          ],
                          "column-1": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  Some Data
                                </span>
                              }
                            />,
                          },
                          "column-2": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                          "id": 0,
                          "isExpanded": undefined,
                          "isFirst": true,
                          "isFirstVisible": true,
                          "isLast": false,
                          "isLastVisible": false,
                        },
                        Object {
                          "cells": Array [
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    More Data
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={<input />}
                                isEditing={false}
                                viewer={
                                  <span>
                                    2
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                          ],
                          "column-1": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  More Data
                                </span>
                              }
                            />,
                          },
                          "column-2": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                          "id": 1,
                          "isExpanded": undefined,
                          "isFirst": false,
                          "isFirstVisible": false,
                          "isLast": true,
                          "isLastVisible": true,
                        },
                      ]
                    }
                    onCollapse={null}
                    rows={Array []}
                    tbodyRef={null}
                  >
                    <tbody
                      className=""
                    >
                      <BodyRow
                        columns={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 1",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-1",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Column 1",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 2",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Column 2",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "",
                              },
                            },
                          ]
                        }
                        key="0-row"
                        onRow={[Function]}
                        renderers={
                          Object {
                            "cell": [Function],
                            "row": [Function],
                            "wrapper": [Function],
                          }
                        }
                        rowData={
                          Object {
                            "cells": Array [
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      Some Data
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={<input />}
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      1
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                            ],
                            "column-1": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    Some Data
                                  </span>
                                }
                              />,
                            },
                            "column-2": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                            "id": 0,
                            "isExpanded": undefined,
                            "isFirst": true,
                            "isFirstVisible": true,
                            "isLast": false,
                            "isLastVisible": false,
                          }
                        }
                        rowIndex={0}
                        rowKey="0-row"
                      >
                        <RowWrapper
                          className=""
                          onMouseDown={[Function]}
                          row={
                            Object {
                              "cells": Array [
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <input
                                        id="editor"
                                      />
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span
                                        id="viewer"
                                      >
                                        Some Data
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={<input />}
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        1
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <span>
                                        <Button
                                          aria-label="Save"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <SaveIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Cancel"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <CloseIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        <Button
                                          aria-label="Edit"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <EditIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Delete"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <TrashIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                  />,
                                },
                              ],
                              "column-1": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      Some Data
                                    </span>
                                  }
                                />,
                              },
                              "column-2": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                              "id": 0,
                              "isExpanded": undefined,
                              "isFirst": true,
                              "isFirstVisible": true,
                              "isLast": false,
                              "isLastVisible": false,
                            }
                          }
                          rowProps={
                            Object {
                              "rowIndex": 0,
                              "rowKey": "0-row",
                            }
                          }
                        >
                          <tr
                            className=""
                            hidden={false}
                            onMouseDown={[Function]}
                          >
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={0}
                              data-label="Column 1"
                              isVisible={true}
                              key="0-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={0}
                                data-label="Column 1"
                              >
                                <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      Some Data
                                    </span>
                                  }
                                >
                                  <span
                                    id="viewer"
                                    key="0"
                                  >
                                    Some Data
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={1}
                              data-label="Column 2"
                              isVisible={true}
                              key="1-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={1}
                                data-label="Column 2"
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={2}
                              data-label=""
                              isVisible={true}
                              key="2-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={2}
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                          </tr>
                        </RowWrapper>
                      </BodyRow>
                      <BodyRow
                        columns={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 1",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-1",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Column 1",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 2",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Column 2",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "",
                              },
                            },
                          ]
                        }
                        key="1-row"
                        onRow={[Function]}
                        renderers={
                          Object {
                            "cell": [Function],
                            "row": [Function],
                            "wrapper": [Function],
                          }
                        }
                        rowData={
                          Object {
                            "cells": Array [
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      More Data
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={<input />}
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      2
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                            ],
                            "column-1": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    More Data
                                  </span>
                                }
                              />,
                            },
                            "column-2": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                            "id": 1,
                            "isExpanded": undefined,
                            "isFirst": false,
                            "isFirstVisible": false,
                            "isLast": true,
                            "isLastVisible": true,
                          }
                        }
                        rowIndex={1}
                        rowKey="1-row"
                      >
                        <RowWrapper
                          className=""
                          onMouseDown={[Function]}
                          row={
                            Object {
                              "cells": Array [
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <input
                                        id="editor"
                                      />
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span
                                        id="viewer"
                                      >
                                        More Data
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={<input />}
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        2
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <span>
                                        <Button
                                          aria-label="Save"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <SaveIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Cancel"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <CloseIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        <Button
                                          aria-label="Edit"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <EditIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Delete"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <TrashIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                  />,
                                },
                              ],
                              "column-1": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      More Data
                                    </span>
                                  }
                                />,
                              },
                              "column-2": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                              "id": 1,
                              "isExpanded": undefined,
                              "isFirst": false,
                              "isFirstVisible": false,
                              "isLast": true,
                              "isLastVisible": true,
                            }
                          }
                          rowProps={
                            Object {
                              "rowIndex": 1,
                              "rowKey": "1-row",
                            }
                          }
                        >
                          <tr
                            className=""
                            hidden={false}
                            onMouseDown={[Function]}
                          >
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={0}
                              data-label="Column 1"
                              isVisible={true}
                              key="0-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={0}
                                data-label="Column 1"
                              >
                                <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      More Data
                                    </span>
                                  }
                                >
                                  <span
                                    id="viewer"
                                    key="0"
                                  >
                                    More Data
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={1}
                              data-label="Column 2"
                              isVisible={true}
                              key="1-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={1}
                                data-label="Column 2"
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={2}
                              data-label=""
                              isVisible={true}
                              key="2-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={2}
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                          </tr>
                        </RowWrapper>
                      </BodyRow>
                    </tbody>
                  </BodyWrapper>
                </Body>
              </ContextBody>
            </TableBody>
          </table>
        </Provider>
      </Table>
    </article>
  </Card>
</MockDataTable>
`;

exports[`DataTable component should render rows in sorted order when ascending 1`] = `
<MockDataTable
  columnTitles={
    Array [
      "Column 1",
      "Column 2",
    ]
  }
  tableData={
    Array [
      Object {
        "name": "More Data",
        "number": 2,
      },
      Object {
        "name": "Some Data",
        "number": 1,
      },
    ]
  }
  title="Data Table"
>
  <Card>
    <article
      className="pf-c-card"
    >
      <div
        style={
          Object {
            "display": "grid",
            "gridTemplateColumns": "max-content auto min-content max-content",
          }
        }
      >
        <FilterComponent
          filter={[Function]}
          onChange={[Function]}
        >
          <div
            className="search-icons"
          >
            <TextInput
              aria-label="Search"
              className=""
              isDisabled={false}
              isReadOnly={false}
              isRequired={false}
              isValid={true}
              onChange={[Function]}
              placeholder="Search..."
              type="text"
              value=""
            >
              <input
                aria-invalid={false}
                aria-label="Search"
                className="pf-c-form-control"
                disabled={false}
                onChange={[Function]}
                placeholder="Search..."
                readOnly={false}
                required={false}
                type="text"
                value=""
              />
            </TextInput>
            <Button
              isDisabled={true}
              onClick={[Function]}
              variant="plain"
            >
              <button
                aria-disabled={null}
                aria-label={null}
                className="pf-c-button pf-m-plain pf-m-disabled"
                disabled={true}
                onClick={[Function]}
                tabIndex={null}
                type="button"
              >
                <svg
                  aria-hidden="true"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                    transform=""
                  />
                </svg>
              </button>
            </Button>
          </div>
        </FilterComponent>
        <span />
        <Button
          isDisabled={false}
          onClick={[Function]}
        >
          <button
            aria-disabled={null}
            aria-label={null}
            className="pf-c-button pf-m-primary"
            disabled={false}
            onClick={[Function]}
            tabIndex={null}
            type="button"
          >
            Add
          </button>
        </Button>
        <Pagination
          className=""
          dropDirection="down"
          itemCount={2}
          itemsEnd={null}
          itemsStart={null}
          onFirstClick={[Function]}
          onLastClick={[Function]}
          onNextClick={[Function]}
          onPageInput={[Function]}
          onPerPageSelect={[Function]}
          onPreviousClick={[Function]}
          onSetPage={[Function]}
          page={1}
          perPage={10}
          perPageOptions={
            Array [
              Object {
                "title": "10",
                "value": 10,
              },
              Object {
                "title": "20",
                "value": 20,
              },
              Object {
                "title": "50",
                "value": 50,
              },
              Object {
                "title": "100",
                "value": 100,
              },
            ]
          }
          titles={
            Object {
              "currPage": "Current page",
              "items": "items",
              "itemsPerPage": "Items per page",
              "optionsToggle": "Select",
              "pages": "pages",
              "paginationTitle": "Pagination",
              "perPageSuffix": "per page",
              "toFirstPage": "Go to first page",
              "toLastPage": "Go to last page",
              "toNextPage": "Go to next page",
              "toPreviousPage": "Go to previous page",
            }
          }
          toggleTemplate={[Function]}
          variant="top"
          widgetId="pagination-options-menu-top"
        >
          <div
            className="pf-c-pagination"
          >
            <div
              className="pf-c-pagination__total-items"
            >
              2 items
            </div>
            <PaginationOptionsMenu
              className=""
              dropDirection="down"
              firstIndex={1}
              itemCount={2}
              itemsPerPageTitle="Items per page"
              itemsTitle="items"
              lastIndex={2}
              onPerPageSelect={[Function]}
              optionsToggle="Select"
              perPage={10}
              perPageOptions={
                Array [
                  Object {
                    "title": "10",
                    "value": 10,
                  },
                  Object {
                    "title": "20",
                    "value": 20,
                  },
                  Object {
                    "title": "50",
                    "value": 50,
                  },
                  Object {
                    "title": "100",
                    "value": 100,
                  },
                ]
              }
              perPageSuffix="per page"
              toggleTemplate={[Function]}
              widgetId="pagination-options-menu-top"
            >
              <div
                className="pf-c-options-menu"
              >
                <span
                  hidden={true}
                  id="pagination-options-menu-top-label"
                >
                  Items per page
                  :
                </span>
                <Dropdown
                  className=""
                  direction="down"
                  dropdownItems={
                    Array [
                      <Item
                        className="pf-c-options-menu__menu-item pf-m-selected"
                        component="button"
                        data-action="per-page-10"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        10
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                        <i
                          className="pf-c-options-menu__menu-item-icon"
                        >
                          <CheckIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </i>
                      </Item>,
                      <Item
                        className="pf-c-options-menu__menu-item"
                        component="button"
                        data-action="per-page-20"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        20
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                      </Item>,
                      <Item
                        className="pf-c-options-menu__menu-item"
                        component="button"
                        data-action="per-page-50"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        50
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                      </Item>,
                      <Item
                        className="pf-c-options-menu__menu-item"
                        component="button"
                        data-action="per-page-100"
                        href="#"
                        isDisabled={false}
                        isHovered={false}
                        onClick={[Function]}
                      >
                        100
                        <span
                          className="pf-c-pagination__menu-text"
                        >
                           per page
                        </span>
                      </Item>,
                    ]
                  }
                  isGrouped={false}
                  isOpen={false}
                  isPlain={true}
                  onSelect={[Function]}
                  position="left"
                  toggle={
                    <OptionsToggle
                      firstIndex={1}
                      isOpen={false}
                      itemCount={2}
                      itemsTitle="items"
                      lastIndex={2}
                      onToggle={[Function]}
                      optionsToggle="Select"
                      toggleTemplate={[Function]}
                      widgetId="pagination-options-menu-top"
                    />
                  }
                >
                  <div
                    className="pf-c-dropdown"
                  >
                    <OptionsToggle
                      ariaHasPopup={true}
                      firstIndex={1}
                      id="pf-toggle-id-9"
                      isOpen={false}
                      isPlain={true}
                      itemCount={2}
                      itemsTitle="items"
                      key=".0"
                      lastIndex={2}
                      onEnter={[Function]}
                      onToggle={[Function]}
                      optionsToggle="Select"
                      toggleTemplate={[Function]}
                      widgetId="pagination-options-menu-top"
                    >
                      <div
                        className="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                      >
                        <span
                          className="pf-c-options-menu__toggle-text"
                        >
                          <ToggleTemplate
                            firstIndex={1}
                            itemCount={2}
                            itemsTitle="items"
                            lastIndex={2}
                          >
                            <strong>
                              1
                               - 
                              2
                            </strong>
                             
                            of 
                            <strong>
                              2
                            </strong>
                             
                            items
                          </ToggleTemplate>
                        </span>
                        <button
                          aria-expanded={false}
                          aria-haspopup="listbox"
                          aria-label="Select"
                          aria-labelledby="pagination-options-menu-top-toggle pagination-options-menu-top-label"
                          className="pf-c-options-menu__toggle-button"
                          id="pagination-options-menu-top-toggle"
                          onClick={[Function]}
                          type="button"
                        >
                          <CaretDownIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          >
                            <svg
                              aria-hidden={true}
                              aria-labelledby={null}
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                Object {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 320 512"
                              width="1em"
                            >
                              <path
                                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                transform=""
                              />
                            </svg>
                          </CaretDownIcon>
                        </button>
                      </div>
                    </OptionsToggle>
                  </div>
                </Dropdown>
              </div>
            </PaginationOptionsMenu>
            <Navigation
              className=""
              currPage="Current page"
              lastPage={1}
              onFirstClick={[Function]}
              onLastClick={[Function]}
              onNextClick={[Function]}
              onPageInput={[Function]}
              onPreviousClick={[Function]}
              onSetPage={[Function]}
              page={1}
              pagesTitle="pages"
              paginationTitle="Pagination"
              toFirstPage="Go to first page"
              toLastPage="Go to last page"
              toNextPage="Go to next page"
              toPreviousPage="Go to previous page"
            >
              <nav
                aria-label="Pagination"
                className="pf-c-pagination__nav"
              >
                <Button
                  aria-label="Go to first page"
                  data-action="first"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to first page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="first"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleDoubleLeftIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 448 512"
                        width="1em"
                      >
                        <path
                          d="M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z"
                          transform=""
                        />
                      </svg>
                    </AngleDoubleLeftIcon>
                  </button>
                </Button>
                <Button
                  aria-label="Go to previous page"
                  data-action="previous"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to previous page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="previous"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleLeftIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 256 512"
                        width="1em"
                      >
                        <path
                          d="M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"
                          transform=""
                        />
                      </svg>
                    </AngleLeftIcon>
                  </button>
                </Button>
                <div
                  className="pf-c-pagination__nav-page-select"
                >
                  <input
                    aria-label="Current page"
                    className="pf-c-form-control"
                    max={1}
                    min="1"
                    onChange={[Function]}
                    type="number"
                    value={1}
                  />
                  <span
                    aria-hidden="true"
                  >
                    of 
                    1
                     
                    pages
                  </span>
                </div>
                <Button
                  aria-label="Go to next page"
                  data-action="next"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to next page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="next"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleRightIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 256 512"
                        width="1em"
                      >
                        <path
                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                          transform=""
                        />
                      </svg>
                    </AngleRightIcon>
                  </button>
                </Button>
                <Button
                  aria-label="Go to last page"
                  data-action="last"
                  isDisabled={true}
                  onClick={[Function]}
                  variant="plain"
                >
                  <button
                    aria-disabled={null}
                    aria-label="Go to last page"
                    className="pf-c-button pf-m-plain pf-m-disabled"
                    data-action="last"
                    disabled={true}
                    onClick={[Function]}
                    tabIndex={null}
                    type="button"
                  >
                    <AngleDoubleRightIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 448 512"
                        width="1em"
                      >
                        <path
                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z"
                          transform=""
                        />
                      </svg>
                    </AngleDoubleRightIcon>
                  </button>
                </Button>
              </nav>
            </Navigation>
          </div>
        </Pagination>
      </div>
      <Table
        borders={true}
        caption="Data Table"
        cells={
          Array [
            Object {
              "cellTransforms": Array [
                [Function],
              ],
              "props": Object {},
              "title": "Column 1",
              "transforms": undefined,
            },
            Object {
              "cellTransforms": Array [
                [Function],
              ],
              "props": Object {},
              "title": "Column 2",
              "transforms": Array [
                [Function],
              ],
            },
            Object {
              "cellTransforms": Array [
                [Function],
              ],
              "props": Object {},
              "title": "",
              "transforms": undefined,
            },
          ]
        }
        className=""
        contentId="expanded-content"
        dropdownDirection="down"
        dropdownPosition="right"
        expandId="expandable-toggle"
        gridBreakPoint="grid-md"
        onCollapse={null}
        onExpand={null}
        onSort={[Function]}
        role="grid"
        rowLabeledBy="simple-node"
        rows={
          Array [
            Object {
              "cells": Array [
                Object {
                  "title": <EditableComponent
                    editor={
                      <input
                        id="editor"
                      />
                    }
                    isEditing={false}
                    viewer={
                      <span
                        id="viewer"
                      >
                        More Data
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={<input />}
                    isEditing={false}
                    viewer={
                      <span>
                        2
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={
                      <span>
                        <Button
                          aria-label="Save"
                          onClick={[Function]}
                          variant="link"
                        >
                          <SaveIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Cancel"
                          onClick={[Function]}
                          variant="link"
                        >
                          <CloseIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                    isEditing={false}
                    viewer={
                      <span>
                        <Button
                          aria-label="Edit"
                          onClick={[Function]}
                          variant="link"
                        >
                          <EditIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Delete"
                          onClick={[Function]}
                          variant="link"
                        >
                          <TrashIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                  />,
                },
              ],
            },
            Object {
              "cells": Array [
                Object {
                  "title": <EditableComponent
                    editor={
                      <input
                        id="editor"
                      />
                    }
                    isEditing={false}
                    viewer={
                      <span
                        id="viewer"
                      >
                        Some Data
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={<input />}
                    isEditing={false}
                    viewer={
                      <span>
                        1
                      </span>
                    }
                  />,
                },
                Object {
                  "title": <EditableComponent
                    editor={
                      <span>
                        <Button
                          aria-label="Save"
                          onClick={[Function]}
                          variant="link"
                        >
                          <SaveIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Cancel"
                          onClick={[Function]}
                          variant="link"
                        >
                          <CloseIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                    isEditing={false}
                    viewer={
                      <span>
                        <Button
                          aria-label="Edit"
                          onClick={[Function]}
                          variant="link"
                        >
                          <EditIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                        <Button
                          aria-label="Delete"
                          onClick={[Function]}
                          variant="link"
                        >
                          <TrashIcon
                            color="currentColor"
                            size="sm"
                            title={null}
                          />
                        </Button>
                      </span>
                    }
                  />,
                },
              ],
            },
          ]
        }
        sortBy={Object {}}
        variant={null}
      >
        <Provider
          className="pf-c-table pf-m-grid-md"
          columns={
            Array [
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "data": undefined,
                "extraParams": Object {
                  "actionResolver": undefined,
                  "actions": undefined,
                  "allRowsSelected": false,
                  "areActionsDisabled": undefined,
                  "contentId": "expanded-content",
                  "dropdownDirection": "down",
                  "dropdownPosition": "right",
                  "expandId": "expandable-toggle",
                  "firstUserColumnIndex": 0,
                  "onCollapse": null,
                  "onExpand": null,
                  "onSelect": undefined,
                  "onSort": [Function],
                  "rowLabeledBy": "simple-node",
                  "sortBy": Object {},
                },
                "header": Object {
                  "formatters": Array [],
                  "label": "Column 1",
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "property": "column-1",
                "props": Object {
                  "data-key": 0,
                  "data-label": "Column 1",
                },
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "data": undefined,
                "extraParams": Object {
                  "actionResolver": undefined,
                  "actions": undefined,
                  "allRowsSelected": false,
                  "areActionsDisabled": undefined,
                  "contentId": "expanded-content",
                  "dropdownDirection": "down",
                  "dropdownPosition": "right",
                  "expandId": "expandable-toggle",
                  "firstUserColumnIndex": 0,
                  "onCollapse": null,
                  "onExpand": null,
                  "onSelect": undefined,
                  "onSort": [Function],
                  "rowLabeledBy": "simple-node",
                  "sortBy": Object {},
                },
                "header": Object {
                  "formatters": Array [],
                  "label": "Column 2",
                  "transforms": Array [
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "property": "column-2",
                "props": Object {
                  "data-key": 1,
                  "data-label": "Column 2",
                },
              },
              Object {
                "cell": Object {
                  "formatters": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "data": undefined,
                "extraParams": Object {
                  "actionResolver": undefined,
                  "actions": undefined,
                  "allRowsSelected": false,
                  "areActionsDisabled": undefined,
                  "contentId": "expanded-content",
                  "dropdownDirection": "down",
                  "dropdownPosition": "right",
                  "expandId": "expandable-toggle",
                  "firstUserColumnIndex": 0,
                  "onCollapse": null,
                  "onExpand": null,
                  "onSelect": undefined,
                  "onSort": [Function],
                  "rowLabeledBy": "simple-node",
                  "sortBy": Object {},
                },
                "header": Object {
                  "formatters": Array [],
                  "label": "",
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                "property": "column-2",
                "props": Object {
                  "data-key": 2,
                  "data-label": "",
                },
              },
            ]
          }
          renderers={
            Object {
              "body": Object {
                "cell": [Function],
                "row": [Function],
                "wrapper": [Function],
              },
              "header": Object {
                "cell": [Function],
              },
            }
          }
          role="grid"
        >
          <table
            className="pf-c-table pf-m-grid-md"
            role="grid"
          >
            <caption>
              Data Table
            </caption>
            <TableHeader
              className=""
            >
              <ContextHeader
                className=""
              >
                <Header
                  className=""
                >
                  <thead
                    className=""
                  >
                    <HeaderRow
                      key="0-header-row"
                      onRow={[Function]}
                      renderers={
                        Object {
                          "cell": [Function],
                          "row": "tr",
                          "wrapper": "thead",
                        }
                      }
                      rowData={
                        Array [
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": undefined,
                              "actions": undefined,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "onCollapse": null,
                              "onExpand": null,
                              "onSelect": undefined,
                              "onSort": [Function],
                              "rowLabeledBy": "simple-node",
                              "sortBy": Object {},
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "Column 1",
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-1",
                            "props": Object {
                              "data-key": 0,
                              "data-label": "Column 1",
                            },
                          },
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": undefined,
                              "actions": undefined,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "onCollapse": null,
                              "onExpand": null,
                              "onSelect": undefined,
                              "onSort": [Function],
                              "rowLabeledBy": "simple-node",
                              "sortBy": Object {},
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "Column 2",
                              "transforms": Array [
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-2",
                            "props": Object {
                              "data-key": 1,
                              "data-label": "Column 2",
                            },
                          },
                          Object {
                            "cell": Object {
                              "formatters": Array [
                                [Function],
                              ],
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "data": undefined,
                            "extraParams": Object {
                              "actionResolver": undefined,
                              "actions": undefined,
                              "allRowsSelected": false,
                              "areActionsDisabled": undefined,
                              "contentId": "expanded-content",
                              "dropdownDirection": "down",
                              "dropdownPosition": "right",
                              "expandId": "expandable-toggle",
                              "firstUserColumnIndex": 0,
                              "onCollapse": null,
                              "onExpand": null,
                              "onSelect": undefined,
                              "onSort": [Function],
                              "rowLabeledBy": "simple-node",
                              "sortBy": Object {},
                            },
                            "header": Object {
                              "formatters": Array [],
                              "label": "",
                              "transforms": Array [
                                [Function],
                                [Function],
                              ],
                            },
                            "property": "column-2",
                            "props": Object {
                              "data-key": 2,
                              "data-label": "",
                            },
                          },
                        ]
                      }
                      rowIndex={0}
                    >
                      <tr>
                        <HeaderCell
                          component="th"
                          data-key={0}
                          data-label="Column 1"
                          key="0-header"
                          scope="col"
                          textCenter={false}
                        >
                          <th
                            className=""
                            data-key={0}
                            scope="col"
                          >
                            Column 1
                          </th>
                        </HeaderCell>
                        <HeaderCell
                          aria-sort="none"
                          className="pf-c-table__sort"
                          component="th"
                          data-key={1}
                          data-label="Column 2"
                          key="1-header"
                          scope="col"
                          textCenter={false}
                        >
                          <th
                            aria-sort="none"
                            className="pf-c-table__sort"
                            data-key={1}
                            scope="col"
                          >
                            <SortColumn
                              className="pf-c-button pf-m-plain"
                              isSortedBy={false}
                              onSort={[Function]}
                              sortDirection=""
                            >
                              <button
                                className="pf-c-button pf-m-plain"
                                onClick={[Function]}
                              >
                                Column 2
                                <span
                                  className="pf-c-table__sort-indicator"
                                >
                                  <ArrowsAltVIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 256 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                        transform=""
                                      />
                                    </svg>
                                  </ArrowsAltVIcon>
                                </span>
                              </button>
                            </SortColumn>
                          </th>
                        </HeaderCell>
                        <HeaderCell
                          component="th"
                          data-key={2}
                          data-label=""
                          key="2-header"
                          scope=""
                          textCenter={false}
                        >
                          <th
                            className=""
                            data-key={2}
                          />
                        </HeaderCell>
                      </tr>
                    </HeaderRow>
                  </thead>
                </Header>
              </ContextHeader>
            </TableHeader>
            <TableBody
              className=""
              onRowClick={[Function]}
              rowKey="id"
            >
              <ContextBody
                className=""
                headerData={
                  Array [
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": null,
                        "onExpand": null,
                        "onSelect": undefined,
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Column 1",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-1",
                      "props": Object {
                        "data-key": 0,
                        "data-label": "Column 1",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": null,
                        "onExpand": null,
                        "onSelect": undefined,
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Column 2",
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-2",
                      "props": Object {
                        "data-key": 1,
                        "data-label": "Column 2",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": false,
                        "areActionsDisabled": undefined,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 0,
                        "onCollapse": null,
                        "onExpand": null,
                        "onSelect": undefined,
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-2",
                      "props": Object {
                        "data-key": 2,
                        "data-label": "",
                      },
                    },
                  ]
                }
                onRow={[Function]}
                onRowClick={[Function]}
                rowKey="id"
                rows={
                  Array [
                    Object {
                      "cells": Array [
                        Object {
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                More Data
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={<input />}
                            isEditing={false}
                            viewer={
                              <span>
                                2
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                      ],
                    },
                    Object {
                      "cells": Array [
                        Object {
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                Some Data
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={<input />}
                            isEditing={false}
                            viewer={
                              <span>
                                1
                              </span>
                            }
                          />,
                        },
                        Object {
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                      ],
                    },
                  ]
                }
              >
                <Body
                  className=""
                  mappedRows={
                    Array [
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  More Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  2
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                More Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 0,
                        "isExpanded": undefined,
                        "isFirst": true,
                        "isFirstVisible": true,
                        "isLast": false,
                        "isLastVisible": false,
                      },
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  Some Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  1
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                Some Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 1,
                        "isExpanded": undefined,
                        "isFirst": false,
                        "isFirstVisible": false,
                        "isLast": true,
                        "isLastVisible": true,
                      },
                    ]
                  }
                  onRow={[Function]}
                  rowKey="id"
                  rows={
                    Array [
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  More Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  2
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                More Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 0,
                        "isExpanded": undefined,
                        "isFirst": true,
                        "isFirstVisible": true,
                        "isLast": false,
                        "isLastVisible": false,
                      },
                      Object {
                        "cells": Array [
                          Object {
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  Some Data
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={<input />}
                              isEditing={false}
                              viewer={
                                <span>
                                  1
                                </span>
                              }
                            />,
                          },
                          Object {
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                        ],
                        "column-1": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <input
                                id="editor"
                              />
                            }
                            isEditing={false}
                            viewer={
                              <span
                                id="viewer"
                              >
                                Some Data
                              </span>
                            }
                          />,
                        },
                        "column-2": Object {
                          "props": Object {
                            "isVisible": true,
                          },
                          "title": <EditableComponent
                            editor={
                              <span>
                                <Button
                                  aria-label="Save"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <SaveIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Cancel"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <CloseIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                            isEditing={false}
                            viewer={
                              <span>
                                <Button
                                  aria-label="Edit"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <EditIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                                <Button
                                  aria-label="Delete"
                                  onClick={[Function]}
                                  variant="link"
                                >
                                  <TrashIcon
                                    color="currentColor"
                                    size="sm"
                                    title={null}
                                  />
                                </Button>
                              </span>
                            }
                          />,
                        },
                        "id": 1,
                        "isExpanded": undefined,
                        "isFirst": false,
                        "isFirstVisible": false,
                        "isLast": true,
                        "isLastVisible": true,
                      },
                    ]
                  }
                >
                  <BodyWrapper
                    className=""
                    mappedRows={
                      Array [
                        Object {
                          "cells": Array [
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    More Data
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={<input />}
                                isEditing={false}
                                viewer={
                                  <span>
                                    2
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                          ],
                          "column-1": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  More Data
                                </span>
                              }
                            />,
                          },
                          "column-2": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                          "id": 0,
                          "isExpanded": undefined,
                          "isFirst": true,
                          "isFirstVisible": true,
                          "isLast": false,
                          "isLastVisible": false,
                        },
                        Object {
                          "cells": Array [
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    Some Data
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={<input />}
                                isEditing={false}
                                viewer={
                                  <span>
                                    1
                                  </span>
                                }
                              />,
                            },
                            Object {
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                          ],
                          "column-1": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <input
                                  id="editor"
                                />
                              }
                              isEditing={false}
                              viewer={
                                <span
                                  id="viewer"
                                >
                                  Some Data
                                </span>
                              }
                            />,
                          },
                          "column-2": Object {
                            "props": Object {
                              "isVisible": true,
                            },
                            "title": <EditableComponent
                              editor={
                                <span>
                                  <Button
                                    aria-label="Save"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <SaveIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Cancel"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <CloseIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                              isEditing={false}
                              viewer={
                                <span>
                                  <Button
                                    aria-label="Edit"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <EditIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                  <Button
                                    aria-label="Delete"
                                    onClick={[Function]}
                                    variant="link"
                                  >
                                    <TrashIcon
                                      color="currentColor"
                                      size="sm"
                                      title={null}
                                    />
                                  </Button>
                                </span>
                              }
                            />,
                          },
                          "id": 1,
                          "isExpanded": undefined,
                          "isFirst": false,
                          "isFirstVisible": false,
                          "isLast": true,
                          "isLastVisible": true,
                        },
                      ]
                    }
                    onCollapse={null}
                    rows={Array []}
                    tbodyRef={null}
                  >
                    <tbody
                      className=""
                    >
                      <BodyRow
                        columns={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 1",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-1",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Column 1",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 2",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Column 2",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "",
                              },
                            },
                          ]
                        }
                        key="0-row"
                        onRow={[Function]}
                        renderers={
                          Object {
                            "cell": [Function],
                            "row": [Function],
                            "wrapper": [Function],
                          }
                        }
                        rowData={
                          Object {
                            "cells": Array [
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      More Data
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={<input />}
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      2
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                            ],
                            "column-1": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    More Data
                                  </span>
                                }
                              />,
                            },
                            "column-2": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                            "id": 0,
                            "isExpanded": undefined,
                            "isFirst": true,
                            "isFirstVisible": true,
                            "isLast": false,
                            "isLastVisible": false,
                          }
                        }
                        rowIndex={0}
                        rowKey="0-row"
                      >
                        <RowWrapper
                          className=""
                          onMouseDown={[Function]}
                          row={
                            Object {
                              "cells": Array [
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <input
                                        id="editor"
                                      />
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span
                                        id="viewer"
                                      >
                                        More Data
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={<input />}
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        2
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <span>
                                        <Button
                                          aria-label="Save"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <SaveIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Cancel"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <CloseIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        <Button
                                          aria-label="Edit"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <EditIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Delete"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <TrashIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                  />,
                                },
                              ],
                              "column-1": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      More Data
                                    </span>
                                  }
                                />,
                              },
                              "column-2": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                              "id": 0,
                              "isExpanded": undefined,
                              "isFirst": true,
                              "isFirstVisible": true,
                              "isLast": false,
                              "isLastVisible": false,
                            }
                          }
                          rowProps={
                            Object {
                              "rowIndex": 0,
                              "rowKey": "0-row",
                            }
                          }
                        >
                          <tr
                            className=""
                            hidden={false}
                            onMouseDown={[Function]}
                          >
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={0}
                              data-label="Column 1"
                              isVisible={true}
                              key="0-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={0}
                                data-label="Column 1"
                              >
                                <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      More Data
                                    </span>
                                  }
                                >
                                  <span
                                    id="viewer"
                                    key="0"
                                  >
                                    More Data
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={1}
                              data-label="Column 2"
                              isVisible={true}
                              key="1-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={1}
                                data-label="Column 2"
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={2}
                              data-label=""
                              isVisible={true}
                              key="2-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={2}
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                          </tr>
                        </RowWrapper>
                      </BodyRow>
                      <BodyRow
                        columns={
                          Array [
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 1",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-1",
                              "props": Object {
                                "data-key": 0,
                                "data-label": "Column 1",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "Column 2",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 1,
                                "data-label": "Column 2",
                              },
                            },
                            Object {
                              "cell": Object {
                                "formatters": Array [
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "data": undefined,
                              "extraParams": Object {
                                "actionResolver": undefined,
                                "actions": undefined,
                                "allRowsSelected": false,
                                "areActionsDisabled": undefined,
                                "contentId": "expanded-content",
                                "dropdownDirection": "down",
                                "dropdownPosition": "right",
                                "expandId": "expandable-toggle",
                                "firstUserColumnIndex": 0,
                                "onCollapse": null,
                                "onExpand": null,
                                "onSelect": undefined,
                                "onSort": [Function],
                                "rowLabeledBy": "simple-node",
                                "sortBy": Object {},
                              },
                              "header": Object {
                                "formatters": Array [],
                                "label": "",
                                "transforms": Array [
                                  [Function],
                                  [Function],
                                ],
                              },
                              "property": "column-2",
                              "props": Object {
                                "data-key": 2,
                                "data-label": "",
                              },
                            },
                          ]
                        }
                        key="1-row"
                        onRow={[Function]}
                        renderers={
                          Object {
                            "cell": [Function],
                            "row": [Function],
                            "wrapper": [Function],
                          }
                        }
                        rowData={
                          Object {
                            "cells": Array [
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      Some Data
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={<input />}
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      1
                                    </span>
                                  }
                                />,
                              },
                              Object {
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                            ],
                            "column-1": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <input
                                    id="editor"
                                  />
                                }
                                isEditing={false}
                                viewer={
                                  <span
                                    id="viewer"
                                  >
                                    Some Data
                                  </span>
                                }
                              />,
                            },
                            "column-2": Object {
                              "props": Object {
                                "isVisible": true,
                              },
                              "title": <EditableComponent
                                editor={
                                  <span>
                                    <Button
                                      aria-label="Save"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <SaveIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Cancel"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <CloseIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                                isEditing={false}
                                viewer={
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <EditIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <TrashIcon
                                        color="currentColor"
                                        size="sm"
                                        title={null}
                                      />
                                    </Button>
                                  </span>
                                }
                              />,
                            },
                            "id": 1,
                            "isExpanded": undefined,
                            "isFirst": false,
                            "isFirstVisible": false,
                            "isLast": true,
                            "isLastVisible": true,
                          }
                        }
                        rowIndex={1}
                        rowKey="1-row"
                      >
                        <RowWrapper
                          className=""
                          onMouseDown={[Function]}
                          row={
                            Object {
                              "cells": Array [
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <input
                                        id="editor"
                                      />
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span
                                        id="viewer"
                                      >
                                        Some Data
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={<input />}
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        1
                                      </span>
                                    }
                                  />,
                                },
                                Object {
                                  "title": <EditableComponent
                                    editor={
                                      <span>
                                        <Button
                                          aria-label="Save"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <SaveIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Cancel"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <CloseIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                    isEditing={false}
                                    viewer={
                                      <span>
                                        <Button
                                          aria-label="Edit"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <EditIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                        <Button
                                          aria-label="Delete"
                                          onClick={[Function]}
                                          variant="link"
                                        >
                                          <TrashIcon
                                            color="currentColor"
                                            size="sm"
                                            title={null}
                                          />
                                        </Button>
                                      </span>
                                    }
                                  />,
                                },
                              ],
                              "column-1": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      Some Data
                                    </span>
                                  }
                                />,
                              },
                              "column-2": Object {
                                "props": Object {
                                  "isVisible": true,
                                },
                                "title": <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                />,
                              },
                              "id": 1,
                              "isExpanded": undefined,
                              "isFirst": false,
                              "isFirstVisible": false,
                              "isLast": true,
                              "isLastVisible": true,
                            }
                          }
                          rowProps={
                            Object {
                              "rowIndex": 1,
                              "rowKey": "1-row",
                            }
                          }
                        >
                          <tr
                            className=""
                            hidden={false}
                            onMouseDown={[Function]}
                          >
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={0}
                              data-label="Column 1"
                              isVisible={true}
                              key="0-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={0}
                                data-label="Column 1"
                              >
                                <EditableComponent
                                  editor={
                                    <input
                                      id="editor"
                                    />
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span
                                      id="viewer"
                                    >
                                      Some Data
                                    </span>
                                  }
                                >
                                  <span
                                    id="viewer"
                                    key="0"
                                  >
                                    Some Data
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={1}
                              data-label="Column 2"
                              isVisible={true}
                              key="1-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={1}
                                data-label="Column 2"
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                            <BodyCell
                              ariaControls=""
                              component="td"
                              data-key={2}
                              data-label=""
                              isVisible={true}
                              key="2-cell"
                              textCenter={false}
                            >
                              <td
                                className=""
                                data-key={2}
                              >
                                <EditableComponent
                                  editor={
                                    <span>
                                      <Button
                                        aria-label="Save"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <SaveIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Cancel"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <CloseIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                  isEditing={false}
                                  viewer={
                                    <span>
                                      <Button
                                        aria-label="Edit"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                      <Button
                                        aria-label="Delete"
                                        onClick={[Function]}
                                        variant="link"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        />
                                      </Button>
                                    </span>
                                  }
                                >
                                  <span>
                                    <Button
                                      aria-label="Edit"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Edit"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <EditIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
                                              transform=""
                                            />
                                          </svg>
                                        </EditIcon>
                                      </button>
                                    </Button>
                                    <Button
                                      aria-label="Delete"
                                      onClick={[Function]}
                                      variant="link"
                                    >
                                      <button
                                        aria-disabled={null}
                                        aria-label="Delete"
                                        className="pf-c-button pf-m-link"
                                        disabled={false}
                                        onClick={[Function]}
                                        tabIndex={null}
                                        type="button"
                                      >
                                        <TrashIcon
                                          color="currentColor"
                                          size="sm"
                                          title={null}
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 448 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z"
                                              transform=""
                                            />
                                          </svg>
                                        </TrashIcon>
                                      </button>
                                    </Button>
                                  </span>
                                </EditableComponent>
                              </td>
                            </BodyCell>
                          </tr>
                        </RowWrapper>
                      </BodyRow>
                    </tbody>
                  </BodyWrapper>
                </Body>
              </ContextBody>
            </TableBody>
          </table>
        </Provider>
      </Table>
    </article>
  </Card>
</MockDataTable>
`;

exports[`DataTable component should render viewer initially 1`] = `
<article
  className="pf-c-card"
>
  <div
    style={
      Object {
        "display": "grid",
        "gridTemplateColumns": "max-content auto min-content max-content",
      }
    }
  >
    <FilterComponent
      filter={[Function]}
      onChange={[Function]}
    />
    <span />
    <Button
      isDisabled={false}
      onClick={[Function]}
    >
      Add
    </Button>
    <Pagination
      className=""
      dropDirection="down"
      itemCount={2}
      itemsEnd={null}
      itemsStart={null}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "items",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Select",
          "pages": "pages",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="top"
      widgetId="pagination-options-menu-top"
    />
  </div>
  <Table
    borders={true}
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    className=""
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={null}
    onExpand={null}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span>
                    <Button
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span>
                    <Button
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span>
                    <Button
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span>
                    <Button
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <TableHeader
      className=""
    />
    <TableBody
      className=""
      onRowClick={[Function]}
      rowKey="id"
    />
  </Table>
</article>
`;
