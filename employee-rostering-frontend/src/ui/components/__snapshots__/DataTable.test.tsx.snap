// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataTable component should render correctly with a few rows 1`] = `
<Card>
  <div
    style={
      Object {
        "display": "grid",
        "gridTemplateColumns": "min-content auto min-content max-content",
      }
    }
  >
    <FilterComponent
      filterListParentId="filter-list"
      onChange={[Function]}
    />
    <span />
    <Button
      isDisabled={false}
      onClick={[Function]}
    >
      Add
    </Button>
    <Pagination
      className=""
      dropDirection="down"
      itemCount={2}
      itemsEnd={null}
      itemsStart={null}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "items",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Select",
          "pages": "pages",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="top"
      widgetId="pagination-options-menu-top"
    />
  </div>
  <Table
    borders={true}
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    className=""
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={null}
    onExpand={null}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span>
                    <Button
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
                viewer={
                  <span>
                    <Button
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span>
                    <Button
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
                viewer={
                  <span>
                    <Button
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <TableHeader
      className=""
    />
    <TableBody
      className=""
      onRowClick={[Function]}
      rowKey="id"
    />
  </Table>
</Card>
`;

exports[`DataTable component should render correctly with no rows 1`] = `
<Card>
  <div
    style={
      Object {
        "display": "grid",
        "gridTemplateColumns": "min-content auto min-content max-content",
      }
    }
  >
    <FilterComponent
      filterListParentId="filter-list"
      onChange={[Function]}
    />
    <span />
    <Button
      isDisabled={false}
      onClick={[Function]}
    >
      Add
    </Button>
    <Pagination
      className=""
      dropDirection="down"
      itemCount={0}
      itemsEnd={null}
      itemsStart={null}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "items",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Select",
          "pages": "pages",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="top"
      widgetId="pagination-options-menu-top"
    />
  </div>
  <Table
    borders={true}
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    className=""
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={null}
    onExpand={null}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={Array []}
    sortBy={Object {}}
    variant={null}
  >
    <TableHeader
      className=""
    />
    <TableBody
      className=""
      onRowClick={[Function]}
      rowKey="id"
    />
  </Table>
</Card>
`;

exports[`DataTable component should render editor for new row 1`] = `
<div>
  <Button
    isDisabled={true}
    onClick={[Function]}
  >
    Add
  </Button>
  <Table
    borders={true}
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
        },
      ]
    }
    className=""
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={null}
    onExpand={null}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <input
                id="editor"
              />,
            },
            Object {
              "title": <input />,
            },
            Object {
              "title": <span>
                <Button
                  aria-label="Save"
                  onClick={[Function]}
                  variant="link"
                >
                  <SaveIcon
                    color="currentColor"
                    size="sm"
                    title={null}
                  />
                </Button>
                <Button
                  aria-label="Cancel"
                  onClick={[Function]}
                  variant="link"
                >
                  <CloseIcon
                    color="currentColor"
                    size="sm"
                    title={null}
                  />
                </Button>
              </span>,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span>
                    <Button
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
                viewer={
                  <span>
                    <Button
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span>
                    <Button
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
                viewer={
                  <span>
                    <Button
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    variant={null}
  >
    <TableHeader
      className=""
    />
    <TableBody
      className=""
      onRowClick={[Function]}
      rowKey="id"
    />
  </Table>
</div>
`;

exports[`DataTable component should render viewer initially 1`] = `
<article
  className="pf-c-card"
>
  <div
    style={
      Object {
        "display": "grid",
        "gridTemplateColumns": "min-content auto min-content max-content",
      }
    }
  >
    <FilterComponent
      filterListParentId="filter-list"
      onChange={[Function]}
    />
    <span />
    <Button
      isDisabled={false}
      onClick={[Function]}
    >
      Add
    </Button>
    <Pagination
      className=""
      dropDirection="down"
      itemCount={2}
      itemsEnd={null}
      itemsStart={null}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "items",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Select",
          "pages": "pages",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="top"
      widgetId="pagination-options-menu-top"
    />
  </div>
  <Table
    borders={true}
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    className=""
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={null}
    onExpand={null}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span>
                    <Button
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
                viewer={
                  <span>
                    <Button
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span>
                    <Button
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
                viewer={
                  <span>
                    <Button
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                    <Button
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        size="sm"
                        title={null}
                      />
                    </Button>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <TableHeader
      className=""
    />
    <TableBody
      className=""
      onRowClick={[Function]}
      rowKey="id"
    />
  </Table>
</article>
`;
