// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rotation Page should render correctly when creating a new shift template via button 1`] = `
<Fragment>
  <Level
    className=""
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--100)",
        "height": "60px",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <TypeaheadSelectInput
        aria-label="Select Spot"
        defaultValue={
          Object {
            "id": 2,
            "name": "Spot",
            "requiredSkillSet": Array [
              Object {
                "id": 3,
                "name": "Skill",
                "tenantId": 0,
                "version": 0,
              },
            ],
            "tenantId": 0,
            "version": 0,
          }
        }
        emptyText="Select Spot"
        onChange={[Function]}
        optionToStringMap={[Function]}
        options={
          Array [
            Object {
              "id": 2,
              "name": "Spot",
              "requiredSkillSet": Array [
                Object {
                  "id": 3,
                  "name": "Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
          ]
        }
      />
      <Pagination
        className=""
        dropDirection="down"
        itemCount={7}
        itemsEnd={null}
        itemsStart={null}
        onFirstClick={[Function]}
        onLastClick={[Function]}
        onNextClick={[Function]}
        onPageInput={[Function]}
        onPerPageSelect={[Function]}
        onPreviousClick={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={7}
        perPageOptions={Array []}
        titles={
          Object {
            "currPage": "Current week",
            "items": "days",
            "itemsPerPage": "Week #",
            "optionsToggle": "Select",
            "page": "week",
            "paginationTitle": "Week Select",
            "perPageSuffix": "Week #",
            "toFirstPage": "Go to the first week",
            "toLastPage": "Go to the last week",
            "toNextPage": "Go to the next week",
            "toPreviousPage": "Go to the previous week",
          }
        }
        toggleTemplate={[Function]}
        variant="top"
        widgetId="pagination-options-menu"
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Button
        aria-label="Create Shift Template"
        onClick={[Function]}
        style={
          Object {
            "margin": "5px",
          }
        }
      >
        Create Shift Template
      </Button>
    </LevelItem>
  </Level>
  <Connect(Component)
    aria-label="Edit Shift Template"
    isOpen={true}
    onClose={[Function]}
    onDelete={[Function]}
    onSave={[Function]}
  />
  <Schedule
    addEvent={[Function]}
    dateFormat={[Function]}
    dayStyle={[Function]}
    endAccessor={[Function]}
    endDate={2018-01-07T00:00:00.000Z}
    eventComponent={[Function]}
    eventStyle={[Function]}
    events={
      Array [
        Object {
          "end": 2018-01-01T17:00:00.000Z,
          "shiftTemplate": Object {
            "durationBetweenRotationStartAndTemplateStart": "P1DT9H",
            "id": 1,
            "rotationEmployee": Object {
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 4,
              "name": "Employee 1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "shiftTemplateDuration": "PT8H",
            "spot": Object {
              "id": 2,
              "name": "Spot",
              "requiredSkillSet": Array [
                Object {
                  "id": 3,
                  "name": "Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "tenantId": 0,
            "version": 0,
          },
          "start": 2018-01-01T09:00:00.000Z,
        },
      ]
    }
    key="2"
    popoverBody={[Function]}
    popoverHeader={[Function]}
    startAccessor={[Function]}
    startDate={2017-12-31T00:00:00.000Z}
    titleAccessor={[Function]}
    wrapperStyle={[Function]}
  />
</Fragment>
`;

exports[`Rotation Page should render correctly when loaded 1`] = `
<Fragment>
  <Level
    className=""
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--100)",
        "height": "60px",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <TypeaheadSelectInput
        aria-label="Select Spot"
        defaultValue={
          Object {
            "id": 2,
            "name": "Spot",
            "requiredSkillSet": Array [
              Object {
                "id": 3,
                "name": "Skill",
                "tenantId": 0,
                "version": 0,
              },
            ],
            "tenantId": 0,
            "version": 0,
          }
        }
        emptyText="Select Spot"
        onChange={[Function]}
        optionToStringMap={[Function]}
        options={
          Array [
            Object {
              "id": 2,
              "name": "Spot",
              "requiredSkillSet": Array [
                Object {
                  "id": 3,
                  "name": "Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
          ]
        }
      />
      <Pagination
        className=""
        dropDirection="down"
        itemCount={7}
        itemsEnd={null}
        itemsStart={null}
        onFirstClick={[Function]}
        onLastClick={[Function]}
        onNextClick={[Function]}
        onPageInput={[Function]}
        onPerPageSelect={[Function]}
        onPreviousClick={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={7}
        perPageOptions={Array []}
        titles={
          Object {
            "currPage": "Current week",
            "items": "days",
            "itemsPerPage": "Week #",
            "optionsToggle": "Select",
            "page": "week",
            "paginationTitle": "Week Select",
            "perPageSuffix": "Week #",
            "toFirstPage": "Go to the first week",
            "toLastPage": "Go to the last week",
            "toNextPage": "Go to the next week",
            "toPreviousPage": "Go to the previous week",
          }
        }
        toggleTemplate={[Function]}
        variant="top"
        widgetId="pagination-options-menu"
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Button
        aria-label="Create Shift Template"
        onClick={[Function]}
        style={
          Object {
            "margin": "5px",
          }
        }
      >
        Create Shift Template
      </Button>
    </LevelItem>
  </Level>
  <Connect(Component)
    aria-label="Edit Shift Template"
    isOpen={false}
    onClose={[Function]}
    onDelete={[Function]}
    onSave={[Function]}
  />
  <Schedule
    addEvent={[Function]}
    dateFormat={[Function]}
    dayStyle={[Function]}
    endAccessor={[Function]}
    endDate={2018-01-07T00:00:00.000Z}
    eventComponent={[Function]}
    eventStyle={[Function]}
    events={
      Array [
        Object {
          "end": 2018-01-01T17:00:00.000Z,
          "shiftTemplate": Object {
            "durationBetweenRotationStartAndTemplateStart": "P1DT9H",
            "id": 1,
            "rotationEmployee": Object {
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 4,
              "name": "Employee 1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "shiftTemplateDuration": "PT8H",
            "spot": Object {
              "id": 2,
              "name": "Spot",
              "requiredSkillSet": Array [
                Object {
                  "id": 3,
                  "name": "Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "tenantId": 0,
            "version": 0,
          },
          "start": 2018-01-01T09:00:00.000Z,
        },
      ]
    }
    key="2"
    popoverBody={[Function]}
    popoverHeader={[Function]}
    startAccessor={[Function]}
    startDate={2017-12-31T00:00:00.000Z}
    titleAccessor={[Function]}
    wrapperStyle={[Function]}
  />
</Fragment>
`;

exports[`Rotation Page should render correctly when loading 1`] = `<div />`;
