// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataTable component should only render data on page 1`] = `
<Fragment>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText=""
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={false}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={2}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
</Fragment>
`;

exports[`DataTable component should only render data on page 2`] = `
<Fragment>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText=""
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={false}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={2}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={2}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={Array []}
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
</Fragment>
`;

exports[`DataTable component should only render rows that match filter 1`] = `
<Fragment>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText="Some"
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={false}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={2}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
</Fragment>
`;

exports[`DataTable component should only render rows that match filter 2`] = `
<Fragment>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText="More"
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={false}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={2}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
</Fragment>
`;

exports[`DataTable component should only render rows that match filter 3`] = `
<Fragment>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText="Data"
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={false}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={2}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
</Fragment>
`;

exports[`DataTable component should render correctly with a few rows 1`] = `
<Fragment>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText=""
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={false}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={2}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
</Fragment>
`;

exports[`DataTable component should render correctly with no rows 1`] = `
<Fragment>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText=""
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={false}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={0}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={Array []}
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
</Fragment>
`;

exports[`DataTable component should render editor for new row 1`] = `
<div>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText=""
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={true}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={2}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <input
                id="editor"
              />,
            },
            Object {
              "title": <input />,
            },
            Object {
              "title": <span>
                <Unknown
                  aria-label="Save"
                  onClick={[Function]}
                  variant="link"
                >
                  <SaveIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                    title={null}
                  />
                </Unknown>
                <Unknown
                  aria-label="Cancel"
                  onClick={[Function]}
                  variant="link"
                >
                  <CloseIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                    title={null}
                  />
                </Unknown>
              </span>,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
</div>
`;

exports[`DataTable component should render rows in reverse of sorted order when descending 1`] = `
<Fragment>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText=""
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={false}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={2}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={
      Object {
        "direction": "desc",
        "index": 1,
      }
    }
  >
    <TableHeader />
    <TableBody />
  </Component>
</Fragment>
`;

exports[`DataTable component should render rows in sorted order when ascending 1`] = `
<Fragment>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText=""
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={false}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={2}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={
      Object {
        "direction": "asc",
        "index": 1,
      }
    }
  >
    <TableHeader />
    <TableBody />
  </Component>
</Fragment>
`;

exports[`DataTable component should render viewer initially 1`] = `
<div>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText=""
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={false}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={2}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Data Table"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 1",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Column 2",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    Some Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    1
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <input
                    id="editor"
                  />
                }
                isEditing={false}
                viewer={
                  <span
                    id="viewer"
                  >
                    More Data
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={<input />}
                isEditing={false}
                viewer={
                  <span>
                    2
                  </span>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
</div>
`;
