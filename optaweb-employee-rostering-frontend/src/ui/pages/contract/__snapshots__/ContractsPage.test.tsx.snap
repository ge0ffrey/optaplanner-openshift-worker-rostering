// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Contracts page should render correctly with a few contracts 1`] = `
<Fragment>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText=""
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={false}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={2}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Contracts"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Name",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Max Hours Per Day",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Max Hours Per Week",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Max Hours Per Month",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Max Hours Per Year",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <ForwardRef
                    aria-label="Name"
                    defaultValue="Contract 1"
                    name="name"
                    onChange={[Function]}
                  />
                }
                isEditing={false}
                viewer={
                  <Text>
                    Contract 1
                  </Text>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <OptionalInput
                    defaultValue={null}
                    isValid={[Function]}
                    label="Trans(i18nKey=maxMinutesPerDay)"
                    onChange={[Function]}
                    valueMapper={[Function]}
                    valueToString={[Function]}
                  />
                }
                isEditing={false}
                viewer={<Text />}
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <OptionalInput
                    defaultValue={null}
                    isValid={[Function]}
                    label="Trans(i18nKey=maxMinutesPerWeek)"
                    onChange={[Function]}
                    valueMapper={[Function]}
                    valueToString={[Function]}
                  />
                }
                isEditing={false}
                viewer={<Text />}
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <OptionalInput
                    defaultValue={null}
                    isValid={[Function]}
                    label="Trans(i18nKey=maxMinutesPerMonth)"
                    onChange={[Function]}
                    valueMapper={[Function]}
                    valueToString={[Function]}
                  />
                }
                isEditing={false}
                viewer={<Text />}
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <OptionalInput
                    defaultValue={null}
                    isValid={[Function]}
                    label="Trans(i18nKey=maxMinutesPerYear)"
                    onChange={[Function]}
                    valueMapper={[Function]}
                    valueToString={[Function]}
                  />
                }
                isEditing={false}
                viewer={<Text />}
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
        Object {
          "cells": Array [
            Object {
              "title": <EditableComponent
                editor={
                  <ForwardRef
                    aria-label="Name"
                    defaultValue="Contract 2"
                    name="name"
                    onChange={[Function]}
                  />
                }
                isEditing={false}
                viewer={
                  <Text>
                    Contract 2
                  </Text>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <OptionalInput
                    defaultValue={1}
                    isValid={[Function]}
                    label="Trans(i18nKey=maxMinutesPerDay)"
                    onChange={[Function]}
                    valueMapper={[Function]}
                    valueToString={[Function]}
                  />
                }
                isEditing={false}
                viewer={
                  <Text>
                    1
                  </Text>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <OptionalInput
                    defaultValue={20}
                    isValid={[Function]}
                    label="Trans(i18nKey=maxMinutesPerWeek)"
                    onChange={[Function]}
                    valueMapper={[Function]}
                    valueToString={[Function]}
                  />
                }
                isEditing={false}
                viewer={
                  <Text>
                    20
                  </Text>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <OptionalInput
                    defaultValue={10}
                    isValid={[Function]}
                    label="Trans(i18nKey=maxMinutesPerMonth)"
                    onChange={[Function]}
                    valueMapper={[Function]}
                    valueToString={[Function]}
                  />
                }
                isEditing={false}
                viewer={
                  <Text>
                    10
                  </Text>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <OptionalInput
                    defaultValue={120}
                    isValid={[Function]}
                    label="Trans(i18nKey=maxMinutesPerYear)"
                    onChange={[Function]}
                    valueMapper={[Function]}
                    valueToString={[Function]}
                  />
                }
                isEditing={false}
                viewer={
                  <Text>
                    120
                  </Text>
                }
              />,
            },
            Object {
              "title": <EditableComponent
                editor={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Save"
                      onClick={[Function]}
                      variant="link"
                    >
                      <SaveIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Cancel"
                      onClick={[Function]}
                      variant="link"
                    >
                      <CloseIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
                isEditing={false}
                viewer={
                  <span
                    style={
                      Object {
                        "display": "grid",
                        "gridColumnGap": "5px",
                        "gridTemplateColumns": "1fr auto auto",
                      }
                    }
                  >
                    <span />
                    <Unknown
                      aria-label="Edit"
                      onClick={[Function]}
                      variant="link"
                    >
                      <EditIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                    <Unknown
                      aria-label="Delete"
                      onClick={[Function]}
                      variant="link"
                    >
                      <TrashIcon
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Unknown>
                  </span>
                }
              />,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
</Fragment>
`;

exports[`Contracts page should render correctly with no contracts 1`] = `
<Fragment>
  <Level
    gutter="sm"
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--200)",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <LevelItem>
      <FilterComponent
        filterText=""
        onChange={[Function]}
      />
    </LevelItem>
    <LevelItem
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <Component
        isDisabled={false}
        onClick={[Function]}
      >
        Trans(i18nKey=add)
      </Component>
      <Component
        itemCount={0}
        onPerPageSelect={[Function]}
        onSetPage={[Function]}
        page={1}
        perPage={10}
        widgetId="pagination-options-menu-top"
      />
    </LevelItem>
  </Level>
  <Component
    caption="Contracts"
    cells={
      Array [
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Name",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Max Hours Per Day",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Max Hours Per Week",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Max Hours Per Month",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "Max Hours Per Year",
          "transforms": undefined,
        },
        Object {
          "cellTransforms": Array [
            [Function],
          ],
          "props": Object {},
          "title": "",
          "transforms": undefined,
        },
      ]
    }
    onSort={[Function]}
    rows={Array []}
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
</Fragment>
`;

exports[`Contracts page should render the editor correctly 1`] = `
<tr>
  <td
    key="0"
  >
    <ForwardRef
      aria-label="Name"
      defaultValue="Contract 2"
      key="0"
      name="name"
      onChange={[Function]}
    />
  </td>
  <td
    key="1"
  >
    <OptionalInput
      defaultValue={1}
      isValid={[Function]}
      key="1"
      label="Trans(i18nKey=maxMinutesPerDay)"
      onChange={[Function]}
      valueMapper={[Function]}
      valueToString={[Function]}
    />
  </td>
  <td
    key="2"
  >
    <OptionalInput
      defaultValue={20}
      isValid={[Function]}
      key="2"
      label="Trans(i18nKey=maxMinutesPerWeek)"
      onChange={[Function]}
      valueMapper={[Function]}
      valueToString={[Function]}
    />
  </td>
  <td
    key="3"
  >
    <OptionalInput
      defaultValue={10}
      isValid={[Function]}
      key="3"
      label="Trans(i18nKey=maxMinutesPerMonth)"
      onChange={[Function]}
      valueMapper={[Function]}
      valueToString={[Function]}
    />
  </td>
  <td
    key="4"
  >
    <OptionalInput
      defaultValue={120}
      isValid={[Function]}
      key="4"
      label="Trans(i18nKey=maxMinutesPerYear)"
      onChange={[Function]}
      valueMapper={[Function]}
      valueToString={[Function]}
    />
  </td>
</tr>
`;

exports[`Contracts page should render the viewer correctly 1`] = `
<tr>
  <td
    key="0"
  >
    <Text
      key="0"
    >
      Contract 2
    </Text>
  </td>
  <td
    key="1"
  >
    <Text
      key="1"
    >
      1
    </Text>
  </td>
  <td
    key="2"
  >
    <Text
      key="2"
    >
      20
    </Text>
  </td>
  <td
    key="3"
  >
    <Text
      key="3"
    >
      10
    </Text>
  </td>
  <td
    key="4"
  >
    <Text
      key="4"
    >
      120
    </Text>
  </td>
</tr>
`;
