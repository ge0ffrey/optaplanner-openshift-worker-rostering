// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditEmployeeStubListModal component should render correctly 1`] = `
<Modal
  actions={
    Array [
      <Unknown
        onClick={[MockFunction]}
        variant="secondary"
      >
        Cancel
      </Unknown>,
      <Unknown
        isDisabled={false}
        onClick={[Function]}
        variant="primary"
      >
        Save
      </Unknown>,
    ]
  }
  appendTo={<body />}
  ariaDescribedById=""
  className=""
  hideTitle={false}
  isFooterLeftAligned={false}
  isLarge={false}
  isOpen={true}
  isSmall={true}
  onClose={[MockFunction]}
  showClose={true}
  title="Edit Employee Stub List"
>
  <Flex
    breakpointMods={
      Array [
        Object {
          "modifier": "column",
        },
      ]
    }
  >
    <FlexItem
      key="uuid-1"
    >
      <Split>
        <SplitItem>
          <InputGroup>
            <InputGroupText>
              <UserIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />
            </InputGroupText>
            <span
              style={
                Object {
                  "width": "200px",
                }
              }
            >
              <TypeaheadSelectInput
                autoSize={false}
                emptyText="Select an employee..."
                onChange={[Function]}
                optionToStringMap={[Function]}
                options={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "contract": Object {
                        "id": 5,
                        "maximumMinutesPerDay": 10,
                        "maximumMinutesPerMonth": 500,
                        "maximumMinutesPerWeek": 70,
                        "maximumMinutesPerYear": 6000,
                        "name": "Basic Contract",
                        "tenantId": 0,
                        "version": 0,
                      },
                      "id": 4,
                      "name": "Employee 1",
                      "shortId": "e1",
                      "skillProficiencySet": Array [],
                      "tenantId": 0,
                      "version": 0,
                    },
                    Object {
                      "color": "#000000",
                      "contract": Object {
                        "id": 5,
                        "maximumMinutesPerDay": 10,
                        "maximumMinutesPerMonth": 500,
                        "maximumMinutesPerWeek": 70,
                        "maximumMinutesPerYear": 6000,
                        "name": "Basic Contract",
                        "tenantId": 0,
                        "version": 0,
                      },
                      "id": 5,
                      "name": "Employee 2",
                      "shortId": "e2",
                      "skillProficiencySet": Array [],
                      "tenantId": 0,
                      "version": 0,
                    },
                  ]
                }
                value={
                  Object {
                    "color": "#FFFFFF",
                    "contract": Object {
                      "id": 5,
                      "maximumMinutesPerDay": 10,
                      "maximumMinutesPerMonth": 500,
                      "maximumMinutesPerWeek": 70,
                      "maximumMinutesPerYear": 6000,
                      "name": "Basic Contract",
                      "tenantId": 0,
                      "version": 0,
                    },
                    "id": 4,
                    "name": "Employee 1",
                    "shortId": "e1",
                    "skillProficiencySet": Array [],
                    "tenantId": 0,
                    "version": 0,
                  }
                }
              />
            </span>
          </InputGroup>
        </SplitItem>
        <SplitItem
          isFilled={true}
        >
          <span />
        </SplitItem>
        <SplitItem>
          <Component
            onClick={[Function]}
            variant="link"
          >
            <TrashIcon
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
              title={null}
            />
          </Component>
        </SplitItem>
      </Split>
    </FlexItem>
    <FlexItem>
      <Component
        onClick={[Function]}
        variant="link"
      >
        + Add Employee
      </Component>
    </FlexItem>
  </Flex>
</Modal>
`;

exports[`EmployeeNickName Component It should render correctly with an employee 1`] = `
<Bullseye
  style={
    Object {
      "color": "black",
    }
  }
>
  <Text>
    e1
  </Text>
</Bullseye>
`;

exports[`EmployeeNickName Component It should render correctly without an employee 1`] = `
<Bullseye
  style={
    Object {
      "color": "gray",
    }
  }
>
  <Text />
</Bullseye>
`;

exports[`EmployeeStub Component It should render correctly with an employee 1`] = `
<button
  className="pf-c-button"
  onClick={[MockFunction]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#FF0000",
      "color": "white",
      "cursor": "pointer",
      "display": "flex",
      "height": "50px",
      "marginTop": "10px",
      "outline": "1px solid black",
      "overflow": "hidden",
      "textOrientation": "upright",
      "width": "30px",
      "writingMode": "vertical-rl",
    }
  }
  title="Employee 1"
  type="button"
>
  <EmployeeNickName
    employee={
      Object {
        "color": "#FFFFFF",
        "contract": Object {
          "id": 5,
          "maximumMinutesPerDay": 10,
          "maximumMinutesPerMonth": 500,
          "maximumMinutesPerWeek": 70,
          "maximumMinutesPerYear": 6000,
          "name": "Basic Contract",
          "tenantId": 0,
          "version": 0,
        },
        "id": 4,
        "name": "Employee 1",
        "shortId": "e1",
        "skillProficiencySet": Array [],
        "tenantId": 0,
        "version": 0,
      }
    }
  />
</button>
`;

exports[`EmployeeStub Component It should render correctly without an employee 1`] = `
<button
  className="pf-c-button"
  onClick={[MockFunction]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#FF0000",
      "color": "white",
      "cursor": "pointer",
      "display": "flex",
      "height": "50px",
      "marginTop": "10px",
      "outline": "1px solid black",
      "overflow": "hidden",
      "textOrientation": "upright",
      "width": "30px",
      "writingMode": "vertical-rl",
    }
  }
  title="Unassigned"
  type="button"
>
  <EmployeeNickName
    employee={null}
  />
</button>
`;

exports[`EmployeeStubList Component should render correctly 1`] = `
<Fragment>
  <Flex
    style={
      Object {
        "alignItems": "center",
      }
    }
  >
    <FlexItem>
      <UsersIcon
        color="currentColor"
        noVerticalAlign={false}
        size="sm"
        title={null}
      />
    </FlexItem>
    <FlexItem>
      <Text>
        Employee Stub:
      </Text>
    </FlexItem>
    <FlexItem>
      <Flex
        breakpointMods={
          Array [
            Object {
              "modifier": "align-items-stretch",
            },
          ]
        }
      >
        <FlexItem>
          <EmployeeStub
            color="gray"
            employee={null}
            isSelected={false}
            onClick={[Function]}
          />
        </FlexItem>
        <FlexItem>
          <EmployeeStub
            color="#FFFFFF"
            employee={null}
            isSelected={false}
            onClick={[Function]}
          />
        </FlexItem>
        <GridItem
          key="4"
        >
          <EmployeeStub
            color="#FFFFFF"
            employee={
              Object {
                "color": "#FFFFFF",
                "contract": Object {
                  "id": 5,
                  "maximumMinutesPerDay": 10,
                  "maximumMinutesPerMonth": 500,
                  "maximumMinutesPerWeek": 70,
                  "maximumMinutesPerYear": 6000,
                  "name": "Basic Contract",
                  "tenantId": 0,
                  "version": 0,
                },
                "id": 4,
                "name": "Employee 1",
                "shortId": "e1",
                "skillProficiencySet": Array [],
                "tenantId": 0,
                "version": 0,
              }
            }
            isSelected={true}
            onClick={[Function]}
          />
        </GridItem>
        <GridItem
          key="5"
        >
          <EmployeeStub
            color="#000000"
            employee={
              Object {
                "color": "#000000",
                "contract": Object {
                  "id": 5,
                  "maximumMinutesPerDay": 10,
                  "maximumMinutesPerMonth": 500,
                  "maximumMinutesPerWeek": 70,
                  "maximumMinutesPerYear": 6000,
                  "name": "Basic Contract",
                  "tenantId": 0,
                  "version": 0,
                },
                "id": 5,
                "name": "Employee 2",
                "shortId": "e2",
                "skillProficiencySet": Array [],
                "tenantId": 0,
                "version": 0,
              }
            }
            isSelected={false}
            onClick={[Function]}
          />
        </GridItem>
      </Flex>
    </FlexItem>
    <FlexItem>
      <Component
        onClick={[Function]}
        variant="link"
      >
        Edit employee stub
         
        <EditIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        />
      </Component>
    </FlexItem>
  </Flex>
  <EditEmployeeStubListModal
    currentStubList={
      Array [
        Object {
          "color": "#FFFFFF",
          "contract": Object {
            "id": 5,
            "maximumMinutesPerDay": 10,
            "maximumMinutesPerMonth": 500,
            "maximumMinutesPerWeek": 70,
            "maximumMinutesPerYear": 6000,
            "name": "Basic Contract",
            "tenantId": 0,
            "version": 0,
          },
          "id": 4,
          "name": "Employee 1",
          "shortId": "e1",
          "skillProficiencySet": Array [],
          "tenantId": 0,
          "version": 0,
        },
        Object {
          "color": "#000000",
          "contract": Object {
            "id": 5,
            "maximumMinutesPerDay": 10,
            "maximumMinutesPerMonth": 500,
            "maximumMinutesPerWeek": 70,
            "maximumMinutesPerYear": 6000,
            "name": "Basic Contract",
            "tenantId": 0,
            "version": 0,
          },
          "id": 5,
          "name": "Employee 2",
          "shortId": "e2",
          "skillProficiencySet": Array [],
          "tenantId": 0,
          "version": 0,
        },
      ]
    }
    isVisible={false}
    onClose={[Function]}
    onUpdateStubList={[MockFunction]}
  />
</Fragment>
`;
